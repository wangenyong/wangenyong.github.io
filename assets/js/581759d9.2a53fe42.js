"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3498],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),o=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},s=function(e){var t=o(e.components);return n.createElement(d.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=o(a),m=r,k=u["".concat(d,".").concat(m)]||u[m]||c[m]||l;return a?n.createElement(k,p(p({ref:t},s),{},{components:a})):n.createElement(k,p({ref:t},s))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,p=new Array(l);p[0]=m;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[u]="string"==typeof e?e:r,p[1]=i;for(var o=2;o<l;o++)p[o]=a[o];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},3937:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>o});var n=a(7462),r=(a(7294),a(3905));const l={sidebar_position:2,id:"spark-RDD",title:"spark RDD"},p=void 0,i={unversionedId:"bigdata/spark-RDD",id:"bigdata/spark-RDD",title:"spark RDD",description:"Parallelize",source:"@site/docs/bigdata/spark-RDD.md",sourceDirName:"bigdata",slug:"/bigdata/spark-RDD",permalink:"/docs/bigdata/spark-RDD",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/bigdata/spark-RDD.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"spark-RDD",title:"spark RDD"},sidebar:"tutorialSidebar",previous:{title:"HDFS \u5e38\u7528\u547d\u4ee4",permalink:"/docs/bigdata/hdfs-command"},next:{title:"spark SQL \u57fa\u672c\u4f7f\u7528",permalink:"/docs/bigdata/Spark-SQL-Basic"}},d={},o=[{value:"Parallelize",id:"parallelize",level:2},{value:"\u5728 Spark Shell \u4e2d\u4f7f\u7528 sc.parallelize",id:"\u5728-spark-shell-\u4e2d\u4f7f\u7528-scparallelize",level:3},{value:"\u5728 Scala \u4e2d\u4f7f\u7528 <strong>sparkContext.parallelize</strong>",id:"\u5728-scala-\u4e2d\u4f7f\u7528-sparkcontextparallelize",level:3},{value:"\u521b\u5efa\u7a7a RDD",id:"\u521b\u5efa\u7a7a-rdd",level:3},{value:"\u8bfb\u53d6 txt \u6587\u4ef6",id:"\u8bfb\u53d6-txt-\u6587\u4ef6",level:2},{value:"\u6570\u636e\u51c6\u5907",id:"\u6570\u636e\u51c6\u5907",level:3},{value:"\u8bfb\u53d6\u4e00\u4e2a\u76ee\u5f55\u4e2d\u7684\u6240\u6709\u6587\u4ef6",id:"\u8bfb\u53d6\u4e00\u4e2a\u76ee\u5f55\u4e2d\u7684\u6240\u6709\u6587\u4ef6",level:3},{value:"\u8bfb\u53d6\u591a\u4e2a\u6587\u4ef6",id:"\u8bfb\u53d6\u591a\u4e2a\u6587\u4ef6",level:3},{value:"\u901a\u8fc7\u6587\u4ef6\u540d\u6a21\u5f0f\u5339\u914d\u8bfb\u53d6\u6587\u4ef6",id:"\u901a\u8fc7\u6587\u4ef6\u540d\u6a21\u5f0f\u5339\u914d\u8bfb\u53d6\u6587\u4ef6",level:3},{value:"\u8bfb\u53d6 CSV \u6587\u4ef6",id:"\u8bfb\u53d6-csv-\u6587\u4ef6",level:2},{value:"\u6570\u636e\u51c6\u5907",id:"\u6570\u636e\u51c6\u5907-1",level:3},{value:"\u52a0\u8f7d CSV \u6587\u4ef6",id:"\u52a0\u8f7d-csv-\u6587\u4ef6",level:3},{value:"\u521b\u5efa RDD",id:"\u521b\u5efa-rdd",level:2},{value:"\u901a\u8fc7\u5217\u8868\u521b\u5efa",id:"\u901a\u8fc7\u5217\u8868\u521b\u5efa",level:3},{value:"\u901a\u8fc7\u6587\u4ef6\u521b\u5efa",id:"\u901a\u8fc7\u6587\u4ef6\u521b\u5efa",level:3},{value:"\u901a\u8fc7\u5176\u5b83 RDD \u521b\u5efa",id:"\u901a\u8fc7\u5176\u5b83-rdd-\u521b\u5efa",level:3},{value:"\u901a\u8fc7 DataFrames \u6216\u8005 DataSet \u521b\u5efa",id:"\u901a\u8fc7-dataframes-\u6216\u8005-dataset-\u521b\u5efa",level:3},{value:"RDD \u8f6c\u6362",id:"rdd-\u8f6c\u6362",level:2},{value:"\u8f6c\u6362\u65b9\u6cd5\u5f52\u7eb3",id:"\u8f6c\u6362\u65b9\u6cd5\u5f52\u7eb3",level:3},{value:"\u5b57\u6570\u7edf\u8ba1\u6848\u4f8b",id:"\u5b57\u6570\u7edf\u8ba1\u6848\u4f8b",level:3},{value:"\u6570\u636e\u51c6\u5907",id:"\u6570\u636e\u51c6\u5907-2",level:4},{value:"\u52a0\u8f7d\u6587\u4ef6",id:"\u52a0\u8f7d\u6587\u4ef6",level:4},{value:"flatmap()",id:"flatmap",level:4},{value:"map()",id:"map",level:4},{value:"filter()",id:"filter",level:4},{value:"reduceByKey()",id:"reducebykey",level:4},{value:"sortByKey()",id:"sortbykey",level:4},{value:"RDD Actions",id:"rdd-actions",level:2},{value:"\u6570\u636e\u51c6\u5907",id:"\u6570\u636e\u51c6\u5907-3",level:3},{value:"aggregate - action",id:"aggregate---action",level:3},{value:"fold - action",id:"fold---action",level:3},{value:"reduce",id:"reduce",level:3},{value:"collect",id:"collect",level:3},{value:"count - action",id:"count---action",level:3},{value:"first",id:"first",level:3},{value:"top",id:"top",level:3},{value:"min",id:"min",level:3},{value:"max",id:"max",level:3},{value:"take",id:"take",level:3},{value:"RDD \u8f6c\u6362\u4e3a DataFrame",id:"rdd-\u8f6c\u6362\u4e3a-dataframe",level:2},{value:"\u51c6\u5907\u6570\u636e",id:"\u51c6\u5907\u6570\u636e",level:3},{value:"toDF",id:"todf",level:3},{value:"createDataFrame",id:"createdataframe",level:3}],s={toc:o},u="wrapper";function c(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"parallelize"},"Parallelize"),(0,r.kt)("h3",{id:"\u5728-spark-shell-\u4e2d\u4f7f\u7528-scparallelize"},"\u5728 Spark Shell \u4e2d\u4f7f\u7528 sc.parallelize"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scala> val rdd = sc.parallelize(Array(1,2,3,4,5,6,7,8,9,10))\nrdd: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[1] at parallelize at\n:24\n")),(0,r.kt)("h3",{id:"\u5728-scala-\u4e2d\u4f7f\u7528-sparkcontextparallelize"},"\u5728 Scala \u4e2d\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"h3"},"sparkContext.parallelize")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import org.apache.spark.rdd.RDD\nimport org.apache.spark.sql.SparkSession\n\nobject RDDParallelize {\n\n  def main(args: Array[String]): Unit = {\n      val spark:SparkSession = SparkSession.builder().master("local[1]")\n          .appName("SparkByExamples.com")\n          .getOrCreate()\n      val rdd:RDD[Int] = spark.sparkContext.parallelize(List(1,2,3,4,5))\n      val rddCollect:Array[Int] = rdd.collect()\n      println("Number of Partitions: "+rdd.getNumPartitions)\n      println("Action: First element: "+rdd.first())\n      println("Action: RDD converted to Array[Int] : ")\n      rddCollect.foreach(println)\n  }\n}\n')),(0,r.kt)("p",null,"\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Number of Partitions: 1\nAction: First element: 1\nAction: RDD converted to Array[Int] : \n1\n2\n3\n4\n5\n")),(0,r.kt)("h3",{id:"\u521b\u5efa\u7a7a-rdd"},"\u521b\u5efa\u7a7a RDD"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sc"},"sparkContext.parallelize(Seq.empty[String])\n")),(0,r.kt)("h2",{id:"\u8bfb\u53d6-txt-\u6587\u4ef6"},"\u8bfb\u53d6 txt \u6587\u4ef6"),(0,r.kt)("p",null,"Spark core \u63d0\u4f9b ",(0,r.kt)("inlineCode",{parentName:"p"},"textFile()")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"wholeTextFiles()")," \u4e24\u4e2a\u65b9\u6cd5\u6765\u8bfb\u53d6\u5355\u4e2a\u6216\u591a\u4e2a\u6587\u4ef6\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"textFile()")," - \u8bfb\u53d6\u5355\u4e2a\u6216\u591a\u4e2a\u6587\u4ef6\u81f3 RDD"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"wholeTextFiles()")," - \u540c\u6837\u8bfb\u53d6\u5355\u4e2a\u6216\u591a\u4e2a\u6587\u4ef6\u81f3 RDD\uff0c\u76f8\u6bd4\u8f83 ",(0,r.kt)("strong",{parentName:"li"},"textFile()"),"\uff0c\u8fd8\u5305\u542b\u4e86\u6240\u8bfb\u53d6\u6587\u4ef6\u7684\u6587\u4ef6\u4fe1\u606f")),(0,r.kt)("h3",{id:"\u6570\u636e\u51c6\u5907"},"\u6570\u636e\u51c6\u5907"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u6587\u4ef6\u540d\u79f0"),(0,r.kt)("th",{parentName:"tr",align:null},"\u6587\u4ef6\u5185\u5bb9"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text01.txt"),(0,r.kt)("td",{parentName:"tr",align:null},"One,1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text02.txt"),(0,r.kt)("td",{parentName:"tr",align:null},"Two,2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text03.txt"),(0,r.kt)("td",{parentName:"tr",align:null},"Three,3")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text04.txt"),(0,r.kt)("td",{parentName:"tr",align:null},"Four,4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"invalid.txt"),(0,r.kt)("td",{parentName:"tr",align:null},"Invalid,I")))),(0,r.kt)("p",null,"\u5728\u672c\u4f8b\u4e2d\uff0c\u6d4b\u8bd5\u6570\u636e\u4f4d\u4e8e ",(0,r.kt)("strong",{parentName:"p"},"Idea")," \u9879\u76ee\u7684\u6839\u8def\u5f84 ",(0,r.kt)("strong",{parentName:"p"},"datas")," \u76ee\u5f55\u4e0b\uff0c\u5b8c\u6574\u8def\u5f84\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"datas/files/text01.txt"),"\u3002"),(0,r.kt)("h3",{id:"\u8bfb\u53d6\u4e00\u4e2a\u76ee\u5f55\u4e2d\u7684\u6240\u6709\u6587\u4ef6"},"\u8bfb\u53d6\u4e00\u4e2a\u76ee\u5f55\u4e2d\u7684\u6240\u6709\u6587\u4ef6"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'val rdd = sc.textFile("datas/files/*")\nrdd.foreach(f=>{\n    println(f)\n})\n')),(0,r.kt)("p",null,"\u6267\u884c\u7ed3\u679c\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"One,1s\nInvalid,Is\nFour,4\nTwo,2\nThree,3\n")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"\u6ce8\u610f\u8bfb\u53d6\u7684\u76ee\u5f55\u4e2d\u4e0d\u80fd\u6709\u5d4c\u5957\u76ee\u5f55\u3002")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"\u5982\u679c\u7a0b\u5e8f\u8fd0\u884c\u5728\u96c6\u7fa4\u4e2d\uff0c\u6253\u5370\u6570\u636e\u7ed3\u679c\u4e4b\u524d\u5fc5\u987b\u6267\u884c ",(0,r.kt)("strong",{parentName:"p"},"collect")," \u64cd\u4f5c\uff1a"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"rdd.collect.foreach(f=>{\n    println(f)\n})\n"))),(0,r.kt)("p",null,"\u4e0b\u9762\u518d\u770b\u770b\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"wholeTextFiles()")," \u65b9\u6cd5\u8bfb\u53d6\u76ee\u5f55\u6587\u4ef6\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'val rddWhole = sc.wholeTextFiles("datas/files/*")\nrddWhole.foreach(f=>{\n    println(f._1+"=>"+f._2)\n})\n')),(0,r.kt)("p",null,"\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"file:/home/spark/Projects/spark-learning/datas/files/text02.txt=>Two,2\nfile:/home/spark/Projects/spark-learning/datas/files/invalid.txt=>Invalid,Is\nfile:/home/spark/Projects/spark-learning/datas/files/text01.txt=>One,1s\nfile:/home/spark/Projects/spark-learning/datas/files/text04.txt=>Four,4\nfile:/home/spark/Projects/spark-learning/datas/files/text03.txt=>Three,3\n")),(0,r.kt)("p",null,"\u53ef\u4ee5\u770b\u5230 ",(0,r.kt)("inlineCode",{parentName:"p"},"wholeTextFiles()")," \u65b9\u6cd5\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u5143\u7ec4\uff0c\u540c\u65f6\u5305\u542b\u4e86\u6587\u4ef6\u7684\u8def\u5f84\u4fe1\u606f\u548c\u6587\u4ef6\u5185\u5bb9\u3002"),(0,r.kt)("h3",{id:"\u8bfb\u53d6\u591a\u4e2a\u6587\u4ef6"},"\u8bfb\u53d6\u591a\u4e2a\u6587\u4ef6"),(0,r.kt)("p",null,"\u5982\u679c\u660e\u786e\u6587\u4ef6\u540d\u79f0\uff0c\u53ef\u4ee5\u540c\u65f6\u8bfb\u53d6\u591a\u4e2a\u6587\u4ef6\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'val rdd3 = sc.textFile("datas/files/text01.txt,datas/files/text02.txt")\nrdd3.foreach(f=>{\n    println(f)\n})\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Two,2\nOne,1s\n")),(0,r.kt)("h3",{id:"\u901a\u8fc7\u6587\u4ef6\u540d\u6a21\u5f0f\u5339\u914d\u8bfb\u53d6\u6587\u4ef6"},"\u901a\u8fc7\u6587\u4ef6\u540d\u6a21\u5f0f\u5339\u914d\u8bfb\u53d6\u6587\u4ef6"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'val rdd2 = sc.textFile("datas/files/text*.txt")\nrdd2.foreach(f=>{\n    println(f)\n})\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"One,1s\nFour,4\nThree,3\nTwo,2ss\n")),(0,r.kt)("h2",{id:"\u8bfb\u53d6-csv-\u6587\u4ef6"},"\u8bfb\u53d6 CSV \u6587\u4ef6"),(0,r.kt)("h3",{id:"\u6570\u636e\u51c6\u5907-1"},"\u6570\u636e\u51c6\u5907"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u6587\u4ef6\u540d"),(0,r.kt)("th",{parentName:"tr",align:null},"\u6587\u4ef6\u5185\u5bb9"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text01.csv"),(0,r.kt)("td",{parentName:"tr",align:null},"Col1,Col2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text02.csv"),(0,r.kt)("td",{parentName:"tr",align:null},"Col1,Col2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text03.csv"),(0,r.kt)("td",{parentName:"tr",align:null},"Col1,Col2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text04.csv"),(0,r.kt)("td",{parentName:"tr",align:null},"Col1,Col2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"invalid.csv"),(0,r.kt)("td",{parentName:"tr",align:null},"Col1,Col2")))),(0,r.kt)("h3",{id:"\u52a0\u8f7d-csv-\u6587\u4ef6"},"\u52a0\u8f7d CSV \u6587\u4ef6"),(0,r.kt)("p",null,"\u7531\u4e8e ",(0,r.kt)("strong",{parentName:"p"},"Spark Core")," \u672c\u8eab\u5e76\u6ca1\u6709\u652f\u6301\u76f4\u63a5\u8bfb\u53d6 ",(0,r.kt)("strong",{parentName:"p"},"CSV")," \u6587\u4ef6\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u9700\u8981\u5148\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"textFile()")," \u65b9\u6cd5\u8fd4\u56de ",(0,r.kt)("inlineCode",{parentName:"p"},"RDD[String]")," \u683c\u5f0f\u6570\u636e\uff0c\u7136\u540e\u901a\u8fc7  ",(0,r.kt)("inlineCode",{parentName:"p"},"split()")," \u65b9\u6cd5\u5c06\u6bcf\u4e00\u884c\u6839\u636e\u5206\u9694\u7b26\u8fdb\u884c\u5212\u5206\uff0c\u6700\u7ec8\u5f97\u5230 ",(0,r.kt)("inlineCode",{parentName:"p"},"RDD[Array[String]]")," \u7c7b\u578b\u6570\u636e\uff1b\u4f8b\u5b50\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'val rddFromFile = sc.textFile("datas/csv/text01.csv")\n\nval rdd = rddFromFile.map(f=>{\n    f.split(",")\n})\n\nrdd.collect().foreach(f=>{\n    println("Col1:"+f(0)+",Col2:"+f(1))\n})\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Col1:Col1,Col2:Col2\nCol1:One,Col2:1\nCol1:Eleven,Col2:11\n")),(0,r.kt)("h2",{id:"\u521b\u5efa-rdd"},"\u521b\u5efa RDD"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Resilient Distributed Datasets (RDD) ")," \u662f ",(0,r.kt)("strong",{parentName:"p"},"Spark")," \u4e2d\u7684\u57fa\u7840\u6570\u636e\u7ed3\u6784\uff0c\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u521b\u5efa ",(0,r.kt)("strong",{parentName:"p"},"RDD")," \u6570\u636e\u3002"),(0,r.kt)("h3",{id:"\u901a\u8fc7\u5217\u8868\u521b\u5efa"},"\u901a\u8fc7\u5217\u8868\u521b\u5efa"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'val rdd=spark.sparkContext.parallelize(Seq(("Java", 20000), \n  ("Python", 100000), ("Scala", 3000)))\nrdd.foreach(println)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"(Python,100000)\n(Scala,3000)\n(Java,20000)\n")),(0,r.kt)("h3",{id:"\u901a\u8fc7\u6587\u4ef6\u521b\u5efa"},"\u901a\u8fc7\u6587\u4ef6\u521b\u5efa"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'val rdd = spark.sparkContext.textFile("/path/textFile.txt")\n\nval rdd2 = spark.sparkContext.wholeTextFiles("/path/textFile.txt")\nrdd2.foreach(record=>println("FileName : "+record._1+", FileContents :"+record._2))\n')),(0,r.kt)("h3",{id:"\u901a\u8fc7\u5176\u5b83-rdd-\u521b\u5efa"},"\u901a\u8fc7\u5176\u5b83 RDD \u521b\u5efa"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val rdd3 = rdd.map(row=>{(row._1,row._2+100)})\n")),(0,r.kt)("h3",{id:"\u901a\u8fc7-dataframes-\u6216\u8005-dataset-\u521b\u5efa"},"\u901a\u8fc7 DataFrames \u6216\u8005 DataSet \u521b\u5efa"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val myRdd2 = spark.range(20).toDF().rdd\n")),(0,r.kt)("h2",{id:"rdd-\u8f6c\u6362"},"RDD \u8f6c\u6362"),(0,r.kt)("p",null,"\u7531\u4e8e ",(0,r.kt)("strong",{parentName:"p"},"RDD")," \u5177\u6709\u4e0d\u53ef\u66f4\u6539\u7684\u5c5e\u6027\uff0c\u6240\u4ee5\u5bf9 ",(0,r.kt)("strong",{parentName:"p"},"RDD")," \u7684\u8f6c\u6362\u64cd\u4f5c\u4e0d\u4f1a\u4fee\u6539\u539f\u59cb\u6570\u636e\uff0c\u800c\u662f\u751f\u6210\u65b0\u7684 ",(0,r.kt)("strong",{parentName:"p"},"RDD"),"\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"RDD lineage")," \u3002"),(0,r.kt)("h3",{id:"\u8f6c\u6362\u65b9\u6cd5\u5f52\u7eb3"},"\u8f6c\u6362\u65b9\u6cd5\u5f52\u7eb3"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u65b9\u6cd5"),(0,r.kt)("th",{parentName:"tr",align:null},"\u4f7f\u7528\u8bf4\u660e"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"cache()"),(0,r.kt)("td",{parentName:"tr",align:null},"\u7f13\u5b58 RDD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"filter()"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8fc7\u6ee4\u6570\u636e\uff0c\u8fd4\u56de\u65b0\u7684 RDD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"flatMap()"),(0,r.kt)("td",{parentName:"tr",align:null},"Returns flattern map meaning if you have a dataset with array, it  converts each elements in a array as a row. In other words it return 0  or more items in output for each element in dataset.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"map()"),(0,r.kt)("td",{parentName:"tr",align:null},"\u904d\u5386\u6570\u636e\uff0c\u5bf9\u6bcf\u4e00\u884c\u6570\u636e\u8fdb\u884c\u5904\u7406\u540e\u8fd4\u56de\u65b0\u7684 RDD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mapPartitions()"),(0,r.kt)("td",{parentName:"tr",align:null},"Similar to map, but executs transformation function on each partition, This gives better performance than map function")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mapPartitionsWithIndex()"),(0,r.kt)("td",{parentName:"tr",align:null},"Similar to map Partitions, but also provides func with an integer value representing the index of the partition.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"randomSplit()"),(0,r.kt)("td",{parentName:"tr",align:null},"Splits the RDD by the weights specified in the argument. For example rdd.randomSplit(0.7,0.3)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"union()"),(0,r.kt)("td",{parentName:"tr",align:null},"Comines elements from source dataset and the argument and returns  combined dataset. This is similar to union function in Math set  operations.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sample()"),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the sample dataset.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"intersection()"),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the dataset which contains elements in both source dataset and an argument")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"distinct()"),(0,r.kt)("td",{parentName:"tr",align:null},"\u6570\u636e\u53bb\u91cd.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"repartition()"),(0,r.kt)("td",{parentName:"tr",align:null},"Return a dataset with number of partition specified in the argument.  This operation reshuffles the RDD randamly, It could either return  lesser or more partioned RDD based on the input supplied.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"coalesce()"),(0,r.kt)("td",{parentName:"tr",align:null},"Similar to repartition by operates better when we want to the decrease  the partitions. Betterment acheives by reshuffling the data from fewer  nodes compared with all nodes by repartition.")))),(0,r.kt)("h3",{id:"\u5b57\u6570\u7edf\u8ba1\u6848\u4f8b"},"\u5b57\u6570\u7edf\u8ba1\u6848\u4f8b"),(0,r.kt)("h4",{id:"\u6570\u636e\u51c6\u5907-2"},"\u6570\u636e\u51c6\u5907"),(0,r.kt)("p",null,"\u8fd9\u91cc\u51c6\u5907\u4e00\u4e2a\u5305\u542b\u591a\u884c\u6570\u636e\u7684 ",(0,r.kt)("strong",{parentName:"p"},"txt")," \u6587\u4ef6\uff0c\u800c\u8f6c\u6362\u64cd\u4f5c\u7684\u6700\u7ec8\u76ee\u7684\u662f\u7edf\u8ba1\u6587\u4ef6\u4e2d\u4ee5 ",(0,r.kt)("strong",{parentName:"p"},"a")," \u5f00\u5934\u7684\u5355\u8bcd\u51fa\u73b0\u7684\u6b21\u6570\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Project Gutenberg\u2019s\nAlice\u2019s Adventures in Wonderland\nby Lewis Carroll\nThis eBook is for the use\nof anyone anywhere\nat no cost and with\nAlice\u2019s Adventures in Wonderland\nby Lewis Carroll\nThis eBook is for the use\nof anyone anywhere\nat no cost and with\nThis eBook is for the use\nof anyone anywhere\nat no cost and with\nProject Gutenberg\u2019s\nAlice\u2019s Adventures in Wonderland\n...\n")),(0,r.kt)("h4",{id:"\u52a0\u8f7d\u6587\u4ef6"},"\u52a0\u8f7d\u6587\u4ef6"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'val rdd:RDD[String] = sc.textFile("datas/test.txt")\n')),(0,r.kt)("h4",{id:"flatmap"},"flatmap()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'val rdd2 = rdd.flatMap(f=>f.split(" "))\n')),(0,r.kt)("p",null,"\u8be5\u65b9\u6cd5\u9996\u5148\u5c06\u6bcf\u4e00\u884c\u6570\u636e\u901a\u8fc7\u7a7a\u683c\u5212\u5206\u4e3a\u5355\u8bcd\u6570\u7ec4\uff0c\u7136\u540e\u5c06\u6570\u7ec4\u6253\u5e73\uff0c\u6700\u7ec8\u5f97\u5230\u6bcf\u4e2a\u5355\u8bcd\u4e3a\u4e00\u884c\u7684\u65b0 ",(0,r.kt)("strong",{parentName:"p"},"RDD")," \u6570\u636e\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Project\nby\nGutenberg\u2019s\nLewis\nCarroll\nAlice\u2019s\nAdventures\nin\nWonderland\nThis\neBook\nis\nby\nfor\nLewis\nthe\n...\n")),(0,r.kt)("h4",{id:"map"},"map()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val rdd3:RDD[(String,Int)]= rdd2.map(m=>(m,1))\n")),(0,r.kt)("p",null,"\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"map()")," \u65b9\u6cd5\u5c06\u6bcf\u4e00\u884c\u7684\u5355\u8bcd\u8f6c\u6362\u4e3a\u5143\u7ec4\uff0c\u503c\u8bbe\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"1 "),"\uff0c\u8868\u660e\u8be5\u5355\u8bcd\u51fa\u73b0 ",(0,r.kt)("strong",{parentName:"p"},"1")," \u6b21\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"(by,1)\n(Lewis,1)\n(Project,1)\n(Carroll,1)\n(Gutenberg\u2019s,1)\n(This,1)\n(eBook,1)\n(Alice\u2019s,1)\n(is,1)\n(Adventures,1)\n...\n")),(0,r.kt)("h4",{id:"filter"},"filter()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'val rdd4 = rdd3.filter(a=> a._1.startsWith("a"))\n')),(0,r.kt)("p",null,"\u5c06\u4ee5 ",(0,r.kt)("strong",{parentName:"p"},"a")," \u5f00\u5934\u7684\u5355\u8bcd\u8fc7\u6ee4\u51fa\u6765\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"(anyone,1)\n(anyone,1)\n(anywhere,1)\n(anywhere,1)\n(at,1)\n(at,1)\n(and,1)\n(and,1)\n(anyone,1)\n(anyone,1)\n(anywhere,1)\n(anywhere,1)\n...\n")),(0,r.kt)("h4",{id:"reducebykey"},"reduceByKey()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val rdd5 = rdd3.reduceByKey(_ + _)\n")),(0,r.kt)("p",null,"\u6839\u636e\u5143\u7ec4\u7684 ",(0,r.kt)("strong",{parentName:"p"},"key")," \u5408\u5e76\u6570\u636e\uff0c\u5c06\u76f8\u540c ",(0,r.kt)("strong",{parentName:"p"},"key")," \u7684\u503c\u8fdb\u884c ",(0,r.kt)("strong",{parentName:"p"},"+")," \u64cd\u4f5c\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"(anyone,27)\n(at,27)\n(and,27)\n(anywhere,27)\n")),(0,r.kt)("h4",{id:"sortbykey"},"sortByKey()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val rdd6 = rdd5.map(a=>(a._2,a._1)).sortByKey()\n")),(0,r.kt)("p",null,"\u6839\u636e\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u6b21\u6570\u6392\u5e8f\u3002"),(0,r.kt)("h2",{id:"rdd-actions"},"RDD Actions"),(0,r.kt)("h3",{id:"\u6570\u636e\u51c6\u5907-3"},"\u6570\u636e\u51c6\u5907"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'val inputRDD = sc.parallelize(List(("Z", 1), ("A", 20), ("B", 30), ("C", 40), ("B", 30), ("B", 60)))\nval listRdd = sc.parallelize(List(1, 2, 3, 4, 5, 3, 2))\n')),(0,r.kt)("h3",{id:"aggregate---action"},"aggregate - action"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'def param0= (accu:Int, v:Int) => accu + v\ndef param1= (accu1:Int,accu2:Int) => accu1 + accu2\nprintln("aggregate : "+listRdd.aggregate(0)(param0,param1))\n\ndef param3= (accu:Int, v:(String,Int)) => accu + v._2\ndef param4= (accu1:Int,accu2:Int) => accu1 + accu2\nprintln("aggregate : "+inputRDD.aggregate(0)(param3,param4))\n')),(0,r.kt)("p",null,"\u5176\u4e2d\uff0c",(0,r.kt)("strong",{parentName:"p"},"param0")," \u53c2\u6570\u7528\u4e8e\u5206\u533a\u5185\u7684\u805a\u5408\u8ba1\u7b97\uff0c",(0,r.kt)("strong",{parentName:"p"},"param1")," \u7528\u4e8e\u5206\u533a\u4e4b\u95f4\u7684\u805a\u5408\u8ba1\u7b97\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"aggregate : 20\naggregate : 181\n")),(0,r.kt)("h3",{id:"fold---action"},"fold - action"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'println("fold :  " + listRdd.fold(0){ (acc,v) =>\n    val sum = acc+v\n    sum\n})\n\nprintln("fold :  " + inputRDD.fold(("Total", 0)) { (acc: (String, Int), v: (String, Int)) =>\nval sum = acc._2 + v._2\n    ("Total", sum)\n})\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"fold :  20\nfold :  (Total,181)\n")),(0,r.kt)("h3",{id:"reduce"},"reduce"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'//reduce\nprintln("reduce : "+listRdd.reduce(_ + _))\n//Output: reduce : 20\nprintln("reduce alternate : "+listRdd.reduce((x, y) => x + y))\n//Output: reduce alternate : 20\nprintln("reduce : "+inputRDD.reduce((x, y) => ("Total",x._2 + y._2)))\n//Output: reduce : (Total,181)\n')),(0,r.kt)("h3",{id:"collect"},"collect"),(0,r.kt)("p",null,"\u8fd4\u56de ",(0,r.kt)("strong",{parentName:"p"},"RDD")," \u6570\u636e\u7684\u6570\u7ec4\u7c7b\u578b\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"//Collect\nval data:Array[Int] = listRdd.collect()\ndata.foreach(println)\n")),(0,r.kt)("h3",{id:"count---action"},"count - action"),(0,r.kt)("p",null,"\u8fd4\u56de ",(0,r.kt)("strong",{parentName:"p"},"RDD")," \u6570\u636e\u603b\u6570\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'//count, countApprox, countApproxDistinct\nprintln("Count : "+listRdd.count)\n//Output: Count : 7\n')),(0,r.kt)("h3",{id:"first"},"first"),(0,r.kt)("p",null,"\u8fd4\u56de RDD \u7b2c\u4e00\u4e2a\u5143\u7d20\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'println("first :  "+listRdd.first())\n//Output: first :  1\nprintln("first :  "+inputRDD.first())\n//Output: first :  (Z,1)\n')),(0,r.kt)("h3",{id:"top"},"top"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'//top\nprintln("top : "+listRdd.top(2).mkString(","))\n//Output: take : 5,4\nprintln("top : "+inputRDD.top(2).mkString(","))\n//Output: take : (Z,1),(C,40)\n')),(0,r.kt)("h3",{id:"min"},"min"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'//min\nprintln("min :  "+listRdd.min())\n//Output: min :  1\nprintln("min :  "+inputRDD.min())\n//Output: min :  (A,20)\n')),(0,r.kt)("h3",{id:"max"},"max"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'//max\nprintln("max :  "+listRdd.max())\n//Output: max :  5\nprintln("max :  "+inputRDD.max())\n//Output: max :  (Z,1)\n')),(0,r.kt)("h3",{id:"take"},"take"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'println("take : "+listRdd.take(2).mkString(","))\n//Output: take : 1,2\n')),(0,r.kt)("h2",{id:"rdd-\u8f6c\u6362\u4e3a-dataframe"},"RDD \u8f6c\u6362\u4e3a DataFrame"),(0,r.kt)("h3",{id:"\u51c6\u5907\u6570\u636e"},"\u51c6\u5907\u6570\u636e"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import spark.implicits._\n\nval columns = Seq("language","users_count")\nval data = Seq(("Java", "20000"), ("Python", "100000"), ("Scala", "3000"))\nval rdd = spark.sparkContext.parallelize(data)\n')),(0,r.kt)("h3",{id:"todf"},"toDF"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val dfFromRDD1 = rdd.toDF()\ndfFromRDD1.printSchema()\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"root\n |-- _1: string (nullable = true)\n |-- _2: string (nullable = true)\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"toDF()")," \u53ef\u6307\u5b9a\u5217\u540d\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'val dfFromRDD1 = rdd.toDF("language","users_count")\ndfFromRDD1.printSchema()\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"root\n |-- language: string (nullable = true)\n |-- users_count: string (nullable = true)\n")),(0,r.kt)("h3",{id:"createdataframe"},"createDataFrame"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val dfFromRDD2 = spark.createDataFrame(rdd).toDF(columns:_*)\ndfFromRDD2.printSchema()\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"root\n |-- language: string (nullable = true)\n |-- users_count: string (nullable = true)\n")))}c.isMDXComponent=!0}}]);