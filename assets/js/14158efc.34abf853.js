"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[386],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>f});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),p=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},c=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(a),m=r,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||l;return a?t.createElement(f,i(i({ref:n},c),{},{components:a})):t.createElement(f,i({ref:n},c))}));function f(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9173:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var t=a(7462),r=(a(7294),a(3905));const l={sidebar_position:15,id:"Spark-SQL-Union",title:"spark SQL Union"},i=void 0,o={unversionedId:"bigdata/Spark-SQL-Union",id:"bigdata/Spark-SQL-Union",title:"spark SQL Union",description:"\u6570\u636e\u51c6\u5907",source:"@site/docs/bigdata/spark-SQL-Union.md",sourceDirName:"bigdata",slug:"/bigdata/Spark-SQL-Union",permalink:"/docs/bigdata/Spark-SQL-Union",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/bigdata/spark-SQL-Union.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15,id:"Spark-SQL-Union",title:"spark SQL Union"},sidebar:"tutorialSidebar",previous:{title:"spark SQL Join",permalink:"/docs/bigdata/Spark-SQL-Join"},next:{title:"\u5143\u6570\u636e\u5206\u5c42",permalink:"/docs/bigdata/data-divide"}},s={},p=[{value:"\u6570\u636e\u51c6\u5907",id:"\u6570\u636e\u51c6\u5907",level:2},{value:"union",id:"union",level:2},{value:"union \u53bb\u91cd",id:"union-\u53bb\u91cd",level:2}],c={toc:p},u="wrapper";function d(e){let{components:n,...a}=e;return(0,r.kt)(u,(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"\u6570\u636e\u51c6\u5907"},"\u6570\u636e\u51c6\u5907"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'val simpleData = Seq(("James", "Sales", "NY", 90000, 34, 10000),\n    ("Michael", "Sales", "NY", 86000, 56, 20000),\n    ("Robert", "Sales", "CA", 81000, 30, 23000),\n    ("Maria", "Finance", "CA", 90000, 24, 23000)\n)\nval df = simpleData.toDF("employee_name", "department", "state", "salary", "age", "bonus")\ndf.printSchema()\ndf.show()\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"root\n |-- employee_name: string (nullable = true)\n |-- department: string (nullable = true)\n |-- state: string (nullable = true)\n |-- salary: integer (nullable = false)\n |-- age: integer (nullable = false)\n |-- bonus: integer (nullable = false)\n\n+-------------+----------+-----+------+---+-----+\n|employee_name|department|state|salary|age|bonus|\n+-------------+----------+-----+------+---+-----+\n|        James|     Sales|   NY| 90000| 34|10000|\n|      Michael|     Sales|   NY| 86000| 56|20000|\n|       Robert|     Sales|   CA| 81000| 30|23000|\n|        Maria|   Finance|   CA| 90000| 24|23000|\n+-------------+----------+-----+------+---+-----+\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'val simpleData2 = Seq(("James", "Sales", "NY", 90000, 34, 10000),\n    ("Maria", "Finance", "CA", 90000, 24, 23000),\n    ("Jen", "Finance", "NY", 79000, 53, 15000),\n    ("Jeff", "Marketing", "CA", 80000, 25, 18000),\n    ("Kumar", "Marketing", "NY", 91000, 50, 21000)\n)\nval df2 = simpleData2.toDF("employee_name", "department", "state", "salary", "age", "bonus")\ndf2.printSchema()\ndf2.show()\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"root\n |-- employee_name: string (nullable = true)\n |-- department: string (nullable = true)\n |-- state: string (nullable = true)\n |-- salary: integer (nullable = false)\n |-- age: integer (nullable = false)\n |-- bonus: integer (nullable = false)\n\n+-------------+----------+-----+------+---+-----+\n|employee_name|department|state|salary|age|bonus|\n+-------------+----------+-----+------+---+-----+\n|        James|     Sales|   NY| 90000| 34|10000|\n|        Maria|   Finance|   CA| 90000| 24|23000|\n|          Jen|   Finance|   NY| 79000| 53|15000|\n|         Jeff| Marketing|   CA| 80000| 25|18000|\n|        Kumar| Marketing|   NY| 91000| 50|21000|\n+-------------+----------+-----+------+---+-----+\n")),(0,r.kt)("h2",{id:"union"},"union"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val df3 = df.union(df2)\ndf3.show(false)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"+-------------+----------+-----+------+---+-----+\n|employee_name|department|state|salary|age|bonus|\n+-------------+----------+-----+------+---+-----+\n|James        |Sales     |NY   |90000 |34 |10000|\n|Michael      |Sales     |NY   |86000 |56 |20000|\n|Robert       |Sales     |CA   |81000 |30 |23000|\n|Maria        |Finance   |CA   |90000 |24 |23000|\n|James        |Sales     |NY   |90000 |34 |10000|\n|Maria        |Finance   |CA   |90000 |24 |23000|\n|Jen          |Finance   |NY   |79000 |53 |15000|\n|Jeff         |Marketing |CA   |80000 |25 |18000|\n|Kumar        |Marketing |NY   |91000 |50 |21000|\n+-------------+----------+-----+------+---+-----+\n")),(0,r.kt)("h2",{id:"union-\u53bb\u91cd"},"union \u53bb\u91cd"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val df5 = df.union(df2).distinct()\ndf5.show(false)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"+-------------+----------+-----+------+---+-----+\n|employee_name|department|state|salary|age|bonus|\n+-------------+----------+-----+------+---+-----+\n|James        |Sales     |NY   |90000 |34 |10000|\n|Jen          |Finance   |NY   |79000 |53 |15000|\n|Kumar        |Marketing |NY   |91000 |50 |21000|\n|Michael      |Sales     |NY   |86000 |56 |20000|\n|Jeff         |Marketing |CA   |80000 |25 |18000|\n|Robert       |Sales     |CA   |81000 |30 |23000|\n|Maria        |Finance   |CA   |90000 |24 |23000|\n+-------------+----------+-----+------+---+-----+\n")))}d.isMDXComponent=!0}}]);