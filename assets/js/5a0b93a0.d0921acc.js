"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7716],{3905:(n,e,a)=>{a.d(e,{Zo:()=>s,kt:()=>m});var t=a(7294);function r(n,e,a){return e in n?Object.defineProperty(n,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[e]=a,n}function o(n,e){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),a.push.apply(a,t)}return a}function i(n){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){r(n,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(a,e))}))}return n}function l(n,e){if(null==n)return{};var a,t,r=function(n,e){if(null==n)return{};var a,t,r={},o=Object.keys(n);for(t=0;t<o.length;t++)a=o[t],e.indexOf(a)>=0||(r[a]=n[a]);return r}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(t=0;t<o.length;t++)a=o[t],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(n,a)&&(r[a]=n[a])}return r}var p=t.createContext({}),c=function(n){var e=t.useContext(p),a=e;return n&&(a="function"==typeof n?n(e):i(i({},e),n)),a},s=function(n){var e=c(n.components);return t.createElement(p.Provider,{value:e},n.children)},u="mdxType",d={inlineCode:"code",wrapper:function(n){var e=n.children;return t.createElement(t.Fragment,{},e)}},v=t.forwardRef((function(n,e){var a=n.components,r=n.mdxType,o=n.originalType,p=n.parentName,s=l(n,["components","mdxType","originalType","parentName"]),u=c(a),v=r,m=u["".concat(p,".").concat(v)]||u[v]||d[v]||o;return a?t.createElement(m,i(i({ref:e},s),{},{components:a})):t.createElement(m,i({ref:e},s))}));function m(n,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var o=a.length,i=new Array(o);i[0]=v;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=n,l[u]="string"==typeof n?n:r,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}v.displayName="MDXCreateElement"},93:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var t=a(7462),r=(a(7294),a(3905));const o={sidebar_position:7,id:"Spark-SQL-Pivot",title:"spark SQL Pivot"},i=void 0,l={unversionedId:"bigdata/Spark-SQL-Pivot",id:"bigdata/Spark-SQL-Pivot",title:"spark SQL Pivot",description:"\u6570\u636e\u51c6\u5907",source:"@site/docs/bigdata/spark-SQL-Pivot.md",sourceDirName:"bigdata",slug:"/bigdata/Spark-SQL-Pivot",permalink:"/docs/bigdata/Spark-SQL-Pivot",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/bigdata/spark-SQL-Pivot.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,id:"Spark-SQL-Pivot",title:"spark SQL Pivot"},sidebar:"tutorialSidebar",previous:{title:"spark SQL \u53bb\u91cd",permalink:"/docs/bigdata/Spark-SQL-Distintc"},next:{title:"spark SQL \u5206\u7ec4\u7edf\u8ba1",permalink:"/docs/bigdata/Spark-SQL-GroupBy"}},p={},c=[{value:"\u6570\u636e\u51c6\u5907",id:"\u6570\u636e\u51c6\u5907",level:2},{value:"pivot",id:"pivot",level:2},{value:"unpivot",id:"unpivot",level:2}],s={toc:c},u="wrapper";function d(n){let{components:e,...a}=n;return(0,r.kt)(u,(0,t.Z)({},s,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"\u6570\u636e\u51c6\u5907"},"\u6570\u636e\u51c6\u5907"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},' val data = Seq(("Banana", 1000, "USA"), ("Carrots", 1500, "USA"), ("Beans", 1600, "USA"),\n      ("Orange", 2000, "USA"), ("Orange", 2000, "USA"), ("Banana", 400, "China"),\n      ("Carrots", 1200, "China"), ("Beans", 1500, "China"), ("Orange", 4000, "China"),\n      ("Banana", 2000, "Canada"), ("Carrots", 2000, "Canada"), ("Beans", 2000, "Mexico"))\n\nval df = data.toDF("Product", "Amount", "Country")\ndf.show()\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"+-------+------+-------+\n|Product|Amount|Country|\n+-------+------+-------+\n| Banana|  1000|    USA|\n|Carrots|  1500|    USA|\n|  Beans|  1600|    USA|\n| Orange|  2000|    USA|\n| Orange|  2000|    USA|\n| Banana|   400|  China|\n|Carrots|  1200|  China|\n|  Beans|  1500|  China|\n| Orange|  4000|  China|\n| Banana|  2000| Canada|\n|Carrots|  2000| Canada|\n|  Beans|  2000| Mexico|\n+-------+-----+-------+\n")),(0,r.kt)("h2",{id:"pivot"},"pivot"),(0,r.kt)("p",null,"\u884c\u8f6c\u5217\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'val pivotDF = df.groupBy("Product").pivot("Country").sum("Amount")\npivotDF.show()\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"+-------+------+-----+------+----+\n|Product|Canada|China|Mexico| USA|\n+-------+------+-----+------+----+\n| Orange|  null| 4000|  null|4000|\n|  Beans|  null| 1500|  2000|1600|\n| Banana|  2000|  400|  null|1000|\n|Carrots|  2000| 1200|  null|1500|\n+-------+------+-----+------+----+\n")),(0,r.kt)("h2",{id:"unpivot"},"unpivot"),(0,r.kt)("p",null,"\u5217\u8f6c\u884c\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"//unpivot\nval unPivotDF = pivotDF.select($\"Product\",\n      expr(\"stack(3, 'Canada', Canada, 'China', China, 'Mexico', Mexico) as (Country,Total)\"))\n      .where(\"Total is not null\")\nunPivotDF.show()\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"+-------+-------+-----+\n|Product|Country|Total|\n+-------+-------+-----+\n| Orange|  China| 4000|\n|  Beans|  China| 1500|\n|  Beans| Mexico| 2000|\n| Banana| Canada| 2000|\n| Banana|  China|  400|\n|Carrots| Canada| 2000|\n|Carrots|  China| 1200|\n+-------+-------+-----+\n")))}d.isMDXComponent=!0}}]);