"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4784],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[d]="string"==typeof e?e:r,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5813:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:6,id:"Spark-SQL-Distintc",title:"spark SQL \u53bb\u91cd"},o=void 0,c={unversionedId:"bigdata/Spark-SQL-Distintc",id:"bigdata/Spark-SQL-Distintc",title:"spark SQL \u53bb\u91cd",description:"\u6570\u636e\u51c6\u5907",source:"@site/docs/bigdata/spark-SQL-distinct.md",sourceDirName:"bigdata",slug:"/bigdata/Spark-SQL-Distintc",permalink:"/docs/bigdata/Spark-SQL-Distintc",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/bigdata/spark-SQL-distinct.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,id:"Spark-SQL-Distintc",title:"spark SQL \u53bb\u91cd"},sidebar:"tutorialSidebar",previous:{title:"spark SQL \u591a\u5143\u6761\u4ef6",permalink:"/docs/bigdata/Spark-SQL-Case"},next:{title:"spark SQL Pivot",permalink:"/docs/bigdata/Spark-SQL-Pivot"}},l={},s=[{value:"\u6570\u636e\u51c6\u5907",id:"\u6570\u636e\u51c6\u5907",level:2},{value:"distinct",id:"distinct",level:2},{value:"dropDuplicate()",id:"dropduplicate",level:2}],p={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"\u6570\u636e\u51c6\u5907"},"\u6570\u636e\u51c6\u5907"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import spark.implicits._\n\nval simpleData = Seq(("James", "Sales", 3000),\n      ("Michael", "Sales", 4600),\n      ("Robert", "Sales", 4100),\n      ("Maria", "Finance", 3000),\n      ("James", "Sales", 3000),\n      ("Scott", "Finance", 3300),\n      ("Jen", "Finance", 3900),\n      ("Jeff", "Marketing", 3000),\n      ("Kumar", "Marketing", 2000),\n      ("Saif", "Sales", 4100)\n    )\nval df = simpleData.toDF("employee_name", "department", "salary")\ndf.show()\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"+-------------+----------+------+\n|employee_name|department|salary|\n+-------------+----------+------+\n|        James|     Sales|  3000|\n|      Michael|     Sales|  4600|\n|       Robert|     Sales|  4100|\n|        Maria|   Finance|  3000|\n|        James|     Sales|  3000|\n|        Scott|   Finance|  3300|\n|          Jen|   Finance|  3900|\n|         Jeff| Marketing|  3000|\n|        Kumar| Marketing|  2000|\n|         Saif|     Sales|  4100|\n+-------------+----------+------+\n")),(0,r.kt)("h2",{id:"distinct"},"distinct"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'//Distinct all columns\nval distinctDF = df.distinct()\nprintln("Distinct count: " + distinctDF.count())\ndistinctDF.show(false)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Distinct count: 9\n+-------------+----------+------+\n|employee_name|department|salary|\n+-------------+----------+------+\n|James        |Sales     |3000  |\n|Michael      |Sales     |4600  |\n|Maria        |Finance   |3000  |\n|Robert       |Sales     |4100  |\n|Saif         |Sales     |4100  |\n|Scott        |Finance   |3300  |\n|Jeff         |Marketing |3000  |\n|Jen          |Finance   |3900  |\n|Kumar        |Marketing |2000  |\n+-------------+----------+------+\n")),(0,r.kt)("h2",{id:"dropduplicate"},"dropDuplicate()"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"dropDuplicate()")," \u652f\u6301\u5220\u9664\u67d0\u51e0\u5217\u91cd\u590d\u7684\u884c\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'//Distinct using dropDuplicates\nval dropDisDF = df.dropDuplicates("department", "salary")\nprintln("Distinct count of department & salary : " + dropDisDF.count())\ndropDisDF.show(false)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Distinct count of department & salary : 8\n+-------------+----------+------+\n|employee_name|department|salary|\n+-------------+----------+------+\n|Jen          |Finance   |3900  |\n|Maria        |Finance   |3000  |\n|Scott        |Finance   |3300  |\n|Michael      |Sales     |4600  |\n|Kumar        |Marketing |2000  |\n|Robert       |Sales     |4100  |\n|James        |Sales     |3000  |\n|Jeff         |Marketing |3000  |\n+-------------+----------+------+\n")))}u.isMDXComponent=!0}}]);