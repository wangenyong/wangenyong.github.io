"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1895],{3905:(n,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>c});var t=a(7294);function r(n,e,a){return e in n?Object.defineProperty(n,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[e]=a,n}function o(n,e){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),a.push.apply(a,t)}return a}function p(n){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){r(n,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(a,e))}))}return n}function l(n,e){if(null==n)return{};var a,t,r=function(n,e){if(null==n)return{};var a,t,r={},o=Object.keys(n);for(t=0;t<o.length;t++)a=o[t],e.indexOf(a)>=0||(r[a]=n[a]);return r}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(t=0;t<o.length;t++)a=o[t],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(n,a)&&(r[a]=n[a])}return r}var d=t.createContext({}),i=function(n){var e=t.useContext(d),a=e;return n&&(a="function"==typeof n?n(e):p(p({},e),n)),a},m=function(n){var e=i(n.components);return t.createElement(d.Provider,{value:e},n.children)},s="mdxType",k={inlineCode:"code",wrapper:function(n){var e=n.children;return t.createElement(t.Fragment,{},e)}},N=t.forwardRef((function(n,e){var a=n.components,r=n.mdxType,o=n.originalType,d=n.parentName,m=l(n,["components","mdxType","originalType","parentName"]),s=i(a),N=r,c=s["".concat(d,".").concat(N)]||s[N]||k[N]||o;return a?t.createElement(c,p(p({ref:e},m),{},{components:a})):t.createElement(c,p({ref:e},m))}));function c(n,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var o=a.length,p=new Array(o);p[0]=N;var l={};for(var d in e)hasOwnProperty.call(e,d)&&(l[d]=e[d]);l.originalType=n,l[s]="string"==typeof n?n:r,p[1]=l;for(var i=2;i<o;i++)p[i]=a[i];return t.createElement.apply(null,p)}return t.createElement.apply(null,a)}N.displayName="MDXCreateElement"},2082:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>p,default:()=>k,frontMatter:()=>o,metadata:()=>l,toc:()=>i});var t=a(7462),r=(a(7294),a(3905));const o={sidebar_position:5,title:"\u6570\u636e\u5408\u5e76\u91cd\u5851"},p=void 0,l={unversionedId:"pandas/data-wrangling",id:"pandas/data-wrangling",title:"\u6570\u636e\u5408\u5e76\u91cd\u5851",description:"\u5c42\u6b21\u5316\u7d22\u5f15",source:"@site/docs/pandas/data-wrangling.md",sourceDirName:"pandas",slug:"/pandas/data-wrangling",permalink:"/docs/pandas/data-wrangling",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/pandas/data-wrangling.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"\u6570\u636e\u5408\u5e76\u91cd\u5851"},sidebar:"tutorialSidebar",previous:{title:"\u6570\u636e\u6e05\u6d17",permalink:"/docs/pandas/data-cleaning"},next:{title:"\u6570\u636e\u53ef\u89c6\u5316",permalink:"/docs/pandas/plotting-visualiazation"}},d={},i=[{value:"\u5c42\u6b21\u5316\u7d22\u5f15",id:"\u5c42\u6b21\u5316\u7d22\u5f15",level:2},{value:"Series",id:"series",level:3},{value:"DataFrame",id:"dataframe",level:3},{value:"\u6392\u5e8f",id:"\u6392\u5e8f",level:3},{value:"\u7edf\u8ba1",id:"\u7edf\u8ba1",level:3},{value:"\u4f7f\u7528DataFrame\u7684\u5217\u8fdb\u884c\u7d22\u5f15",id:"\u4f7f\u7528dataframe\u7684\u5217\u8fdb\u884c\u7d22\u5f15",level:3},{value:"\u5408\u5e76\u6570\u636e",id:"\u5408\u5e76\u6570\u636e",level:2},{value:"merge",id:"merge",level:3},{value:"\u591a\u5bf9\u4e00",id:"\u591a\u5bf9\u4e00",level:4},{value:"\u591a\u5bf9\u591a",id:"\u591a\u5bf9\u591a",level:4},{value:"\u591a\u4e2a\u952e",id:"\u591a\u4e2a\u952e",level:4},{value:"\u91cd\u590d\u5217\u540d",id:"\u91cd\u590d\u5217\u540d",level:4},{value:"\u57fa\u4e8e\u7d22\u5f15\u5408\u5e76",id:"\u57fa\u4e8e\u7d22\u5f15\u5408\u5e76",level:3},{value:"\u57fa\u4e8e\u8f74\u5408\u5e76\u6570\u636e",id:"\u57fa\u4e8e\u8f74\u5408\u5e76\u6570\u636e",level:3},{value:"\u5408\u5e76\u8986\u76d6\u6570\u636e",id:"\u5408\u5e76\u8986\u76d6\u6570\u636e",level:3},{value:"\u6570\u636e\u91cd\u5851",id:"\u6570\u636e\u91cd\u5851",level:2},{value:"\u91cd\u5851\u5c42\u6b21\u5316\u7d22\u5f15",id:"\u91cd\u5851\u5c42\u6b21\u5316\u7d22\u5f15",level:3},{value:"\u6570\u636e\u6241\u5e73\u5316",id:"\u6570\u636e\u6241\u5e73\u5316",level:3},{value:"pivot \u9006\u8fd0\u7b97",id:"pivot-\u9006\u8fd0\u7b97",level:3}],m={toc:i},s="wrapper";function k(n){let{components:e,...a}=n;return(0,r.kt)(s,(0,t.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"\u5c42\u6b21\u5316\u7d22\u5f15"},"\u5c42\u6b21\u5316\u7d22\u5f15"),(0,r.kt)("p",null,"\u5c42\u6b21\u5316\u7d22\u5f15\uff08",(0,r.kt)("strong",{parentName:"p"},"hierarchical indexing"),"\uff09\u80fd\u4ee5\u4f4e\u7ef4\u5ea6\u5f62\u5f0f\u5904\u7406\u9ad8\u7ef4\u5ea6\u6570\u636e\u3002"),(0,r.kt)("h3",{id:"series"},"Series"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"data = pd.Series(np.random.randn(9),\n                 index=[['a', 'a', 'a', 'b', 'b', 'c', 'c', 'd', 'd'],\n                        [1, 2, 3, 1, 3, 1, 2, 2, 3]])\n>>> data\na  1    0.995134\n   2   -0.011890\n   3    0.295728\nb  1    0.084780\n   3   -1.246741\nc  1    0.249314\n   2   -1.139397\nd  2    1.016694\n   3    0.294815\ndtype: float64\n\n>>> data.index\nMultiIndex([('a', 1),\n            ('a', 2),\n            ('a', 3),\n            ('b', 1),\n            ('b', 3),\n            ('c', 1),\n            ('c', 2),\n            ('d', 2),\n            ('d', 3)],\n           )\n")),(0,r.kt)("p",null,"\u5b50\u96c6\u9009\u53d6\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> data['b']\n1    0.084780\n3   -1.246741\ndtype: float64\n    \n>>> data['b':'c']\nb  1    0.084780\n   3   -1.246741\nc  1    0.249314\n   2   -1.139397\ndtype: float64\n    \n>>> data.loc[['b', 'd']]\nb  1    0.084780\n   3   -1.246741\nd  2    1.016694\n   3   0.294815\ndtype: float64\n")),(0,r.kt)("p",null,"\u5185\u4fa7\u7d22\u5f15\u9009\u53d6\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> data.loc[:, 2]\na   -0.011890\nc   -1.139397\nd    1.016694\ndtype: float64\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"\u5c42\u6b21\u5316\u7d22\u5f15\u5728\u6570\u636e\u91cd\u5851\u548c\u57fa\u4e8e\u5206\u7ec4\u7684\u64cd\u4f5c\uff08\u5982\u900f\u89c6\u8868\u751f\u6210\uff09\u4e2d\u626e\u6f14\u7740\u91cd\u8981\u7684\u89d2\u8272\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u901a\u8fc7 ",(0,r.kt)("strong",{parentName:"p"},"unstack")," \u65b9\u6cd5\u5c06\u8fd9\u6bb5\u6570\u636e\u91cd\u65b0\u5b89\u6392\u5230\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"DataFrame")," \u4e2d\uff1a"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> data.unstack()\n          1         2         3\na  0.995134 -0.011890  0.295728\nb  0.084780       NaN -1.246741\nc  0.249314 -1.139397       NaN\nd       NaN  1.016694  0.294815\n")),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"stack()")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> data.unstack().stack()\na  1    0.995134\n   2   -0.011890\n   3    0.295728\nb  1    0.084780\n   3   -1.246741\nc  1    0.249314\n   2   -1.139397\nd  2    1.016694\n   3    0.294815\ndtype: float64\n"))),(0,r.kt)("h3",{id:"dataframe"},"DataFrame"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> frame = pd.DataFrame(np.arange(12).reshape((4, 3)),\n                         index=[['a', 'a', 'b', 'b'], \n                                [1, 2, 1, 2]],\n                         columns=[['Ohio', 'Ohio', 'Colorado'],\n                                  ['Green', 'Red', 'Green']])\n>>> frame\n     Ohio     Colorado\n    Green Red    Green\na 1     0   1        2\n  2     3   4        5\nb 1     6   7        8\n  2     9  10       11\n")),(0,r.kt)("p",null,"\u53ef\u4ee5\u5bf9\u591a\u5c42\u7d22\u5f15\u8bbe\u7f6e\u540d\u79f0\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> frame.index.names = ['key1', 'key2']\n>>> frame.columns.names = ['state', 'color']\n>>> frame\nstate      Ohio     Colorado\ncolor     Green Red    Green\nkey1 key2                   \na    1        0   1        2\n     2        3   4        5\nb    1        6   7        8\n     2        9  10       11\n")),(0,r.kt)("p",null,"\u9009\u53d6\u5206\u7ec4\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> frame['Ohio']\ncolor      Green  Red\nkey1 key2            \na    1         0    1\n     2         3    4\nb    1         6    7\n     2         9   10\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"\u5c42\u6b21\u5316\u7d22\u5f15\u53ef\u4ee5\u5355\u72ec\u521b\u5efa\uff1a"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"MultiIndex.from_arrays([['Ohio', 'Ohio', 'Colorado'], \n                        ['Green', 'Red', 'Green']],\n                       names=['state', 'color'])\n"))),(0,r.kt)("h3",{id:"\u6392\u5e8f"},"\u6392\u5e8f"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"swaplevel")," \u53ef\u4ee5\u4e92\u6362\u7d22\u5f15\u7ea7\u522b\u3002\uff08\u6570\u636e\u4e0d\u4f1a\u6539\u52a8\uff09"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> frame.swaplevel('key1', 'key2')\nstate      Ohio     Colorado\ncolor     Green Red    Green\nkey2 key1                   \n1    a        0   1        2\n2    a        3   4        5\n1    b        6   7        8\n2    b        9  10       11\n")),(0,r.kt)("p",null,"\u800c ",(0,r.kt)("strong",{parentName:"p"},"sort_index")," \u5219\u6839\u636e\u5355\u4e2a\u7ea7\u522b\u4e2d\u7684\u503c\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> frame.sort_index(level=1)\nstate      Ohio     Colorado\ncolor     Green Red    Green\nkey1 key2                   \na    1        0   1        2\nb    1        6   7        8\na    2        3   4        5\nb    2        9  10       11\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"\u4ea4\u6362\u7ea7\u522b\u65f6\uff0c\u5e38\u5e38\u4e5f\u4f1a\u7528\u5230 ",(0,r.kt)("strong",{parentName:"p"},"sort_index"),"\uff0c\u8fd9\u6837\u6700\u7ec8\u7ed3\u679c\u5c31\u662f\u6309\u7167\u6307\u5b9a\u987a\u5e8f\u8fdb\u884c\u5b57\u6bcd\u6392\u5e8f\u4e86\uff1a"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> frame.swaplevel(0, 1).sort_index(level=0)\nstate      Ohio     Colorado\ncolor     Green Red    Green\nkey2 key1                   \n1    a        0   1        2\n     b        6   7        8\n2    a        3   4        5\n     b        9  10       11\n"))),(0,r.kt)("h3",{id:"\u7edf\u8ba1"},"\u7edf\u8ba1"),(0,r.kt)("p",null,"\u901a\u8fc7 ",(0,r.kt)("strong",{parentName:"p"},"level")," \u9009\u9879\u6307\u5b9a\u7edf\u8ba1\u7ea7\u522b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> frame\nstate      Ohio     Colorado\ncolor     Green Red    Green\nkey1 key2                   \na    1        0   1        2\n     2        3   4        5\nb    1        6   7        8\n     2        9  10       11\n    \n>>> frame.sum(level='key2')\nstate  Ohio     Colorado\ncolor Green Red    Green\nkey2                    \n1         6   8       10\n2        12  14       16\n\n>>> frame.sum(level='color', axis=1)\ncolor      Green  Red\nkey1 key2            \na    1         2    1\n     2         8    4\nb    1        14    7\n     2        20   10\n")),(0,r.kt)("h3",{id:"\u4f7f\u7528dataframe\u7684\u5217\u8fdb\u884c\u7d22\u5f15"},"\u4f7f\u7528DataFrame\u7684\u5217\u8fdb\u884c\u7d22\u5f15"),(0,r.kt)("p",null,"\u4eba\u4eec\u7ecf\u5e38\u60f3\u8981\u5c06 ",(0,r.kt)("strong",{parentName:"p"},"DataFrame")," \u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\u5f53\u505a\u884c\u7d22\u5f15\u6765\u7528\uff0c\u6216\u8005\u53ef\u80fd\u5e0c\u671b\u5c06\u884c\u7d22\u5f15\u53d8\u6210 ",(0,r.kt)("strong",{parentName:"p"},"DataFrame")," \u7684\u5217\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> frame = pd.DataFrame({'a': range(7), 'b': range(7, 0, -1),\n                          'c': ['one', 'one', 'one', 'two', 'two',\n                                'two', 'two'],\n                          'd': [0, 1, 2, 0, 1, 2, 3]})\n>>> frame\n   a  b    c  d\n0  0  7  one  0\n1  1  6  one  1\n2  2  5  one  2\n3  3  4  two  0\n4  4  3  two  1\n5  5  2  two  2\n6  6  1  two  3\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"DataFrame")," \u7684 set_index \u51fd\u6570\u4f1a\u5c06\u5176\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\u8f6c\u6362\u4e3a\u884c\u7d22\u5f15\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684",(0,r.kt)("strong",{parentName:"p"},"DataFrame"),"\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> frame2 = frame.set_index(['c', 'd'])\n>>> frame2\n       a  b\nc   d      \none 0  0  7\n    1  1  6\n    2  2  5\ntwo 0  3  4\n    1  4  3\n    2  5  2\n    3  6  1\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8f6c\u6362\u4e3a\u7d22\u5f15\u7684\u5217\u4f1a\u4ece ",(0,r.kt)("strong",{parentName:"p"},"DataFrame")," \u4e2d\u79fb\u9664\uff0c\u4f46\u4e5f\u53ef\u4ee5\u5c06\u5176\u4fdd\u7559\u4e0b\u6765\uff1a"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> frame.set_index(['c', 'd'], drop=False)\n       a  b    c  d\nc   d              \none 0  0  7  one  0\n    1  1  6  one  1\n    2  2  5  one  2\ntwo 0  3  4  two  0\n    1  4  3  two  1\n    2  5  2  two  2\n    3  6  1  two  3\n"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"reset_index")," \u7684\u529f\u80fd\u8ddf ",(0,r.kt)("strong",{parentName:"p"},"set_index")," \u521a\u597d\u76f8\u53cd\uff0c\u5c42\u6b21\u5316\u7d22\u5f15\u7684\u7ea7\u522b\u4f1a\u88ab\u8f6c\u79fb\u5230\u5217\u91cc\u9762\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> frame2.reset_index()\n     c  d  a  b\n0  one  0  0  7\n1  one  1  1  6\n2  one  2  2  5\n3  two  0  3  4\n4  two  1  4  3\n5  two  2  5  2\n6  two  3  6  1\n")),(0,r.kt)("h2",{id:"\u5408\u5e76\u6570\u636e"},"\u5408\u5e76\u6570\u636e"),(0,r.kt)("h3",{id:"merge"},"merge"),(0,r.kt)("h4",{id:"\u591a\u5bf9\u4e00"},"\u591a\u5bf9\u4e00"),(0,r.kt)("p",null,"\u7c7b\u4f3c\u4e8e\u6570\u636e\u5e93\u7684 ",(0,r.kt)("strong",{parentName:"p"},"join"),"\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> df1 = pd.DataFrame({'key': ['b', 'b', 'a', 'c', 'a', 'a', 'b'],\n                        'data1': range(7)})\n>>> df2 = pd.DataFrame({'key': ['a', 'b', 'd'],\n                        'data2': range(3)})\n>>> df1\n  key  data1\n0   b      0\n1   b      1\n2   a      2\n3   c      3\n4   a      4\n5   a      5\n6   b      6\n\n>>> df2\n  key  data2\n0   a      0\n1   b      1\n2   d      2\n")),(0,r.kt)("p",null,"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cmerge\u5c31\u4f1a\u5c06\u91cd\u53e0\u5217\u7684\u5217\u540d\u5f53\u505a\u952e\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> pd.merge(df1, df2)\n  key  data1  data2\n0   b      0      1\n1   b      1      1\n2   b      6      1\n3   a      2      0\n4   a      4      0\n5   a      5      0\n\n>>> pd.merge(df1, df2, on='key')\n  key  data1  data2\n0   b      0      1\n1   b      1      1\n2   b      6      1\n3   a      2      0\n4   a      4      0\n5   a      5      0\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cmerge \u4f7f\u7528\u5185\u94fe\u63a5 ",(0,r.kt)("strong",{parentName:"p"},"inner"),"\uff0c\u7ed3\u679c\u662f\u952e\u7684\u4ea4\u96c6\u3002")),(0,r.kt)("admonition",{title:"outer",type:"tip"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> pd.merge(df1, df2, how='outer')\n  key  data1  data2\n0   b    0.0    1.0\n1   b    1.0    1.0\n2   b    6.0    1.0\n3   a    2.0    0.0\n4   a    4.0    0.0\n5   a    5.0    0.0\n6   c    3.0    NaN\n7   d    NaN    2.0\n"))),(0,r.kt)("admonition",{title:"\u5982\u679c\u4e24\u8005\u7684\u5217\u8868\u90fd\u4e0d\u76f8\u540c\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u5408\u5e76",type:"info"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> df3 = pd.DataFrame({'lkey': ['b', 'b', 'a', 'c', 'a', 'a', 'b'],\n                        'data1': range(7)})\n>>> df4 = pd.DataFrame({'rkey': ['a', 'b', 'd'],\n                        'data2': range(3)})\n>>> df3\n  lkey  data1\n0    b      0\n1    b      1\n2    a      2\n3    c      3\n4    a      4\n5    a      5\n6    b      6\n\n>>> df4\n  rkey  data2\n0    a      0\n1    b      1\n2    d      2\n\n>>> pd.merge(df3, df4, left_on='lkey', right_on='rkey')\n  lkey  data1 rkey  data2\n0    b      0    b      1\n1    b      1    b      1\n2    b      6    b      1\n3    a      2    a      0\n4    a      4    a      0\n5    a      5    a      0\n"))),(0,r.kt)("h4",{id:"\u591a\u5bf9\u591a"},"\u591a\u5bf9\u591a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> df1 = pd.DataFrame({'key': ['b', 'b', 'a', 'c', 'a', 'b'],\n                        'data1': range(6)})\n>>> df2 = pd.DataFrame({'key': ['a', 'b', 'a', 'b', 'd'],\n                        'data2': range(5)})\n>>> df1\n  key  data1\n0   b      0\n1   b      1\n2   a      2\n3   c      3\n4   a      4\n5   b      5\n\n>>> df2\n  key  data2\n0   a      0\n1   b      1\n2   a      2\n3   b      3\n4   d      4\n\n>>> pd.merge(df1, df2, on='key', how='left')\n   key  data1  data2\n0    b      0    1.0\n1    b      0    3.0\n2    b      1    1.0\n3    b      1    3.0\n4    a      2    0.0\n5    a      2    2.0\n6    c      3    NaN\n7    a      4    0.0\n8    a      4    2.0\n9    b      5    1.0\n10   b      5    3.0\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"\u591a\u5bf9\u591a\u8fde\u63a5\u4ea7\u751f\u7684\u662f\u884c\u7684 ",(0,r.kt)("strong",{parentName:"p"},"\u7b1b\u5361\u5c14\u79ef"),"\u3002\u7531\u4e8e\u5de6\u8fb9\u7684 ",(0,r.kt)("strong",{parentName:"p"},"DataFrame")," \u6709 ",(0,r.kt)("strong",{parentName:"p"},"3")," \u4e2a ",(0,r.kt)("strong",{parentName:"p"},"b")," \u884c\uff0c\u53f3\u8fb9\u7684\u6709 ",(0,r.kt)("strong",{parentName:"p"},"2")," \u4e2a\uff0c\u6240\u4ee5\u6700\u7ec8\u7ed3\u679c\u4e2d\u5c31\u6709 ",(0,r.kt)("strong",{parentName:"p"},"6")," \u4e2a ",(0,r.kt)("strong",{parentName:"p"},"b")," \u884c\u3002")),(0,r.kt)("admonition",{title:"inner",type:"tip"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> pd.merge(df1, df2, how='inner')\n  key  data1  data2\n0   b      0      1\n1   b      0      3\n2   b      1      1\n3   b      1      3\n4   b      5      1\n5   b      5      3\n6   a      2      0\n7   a      2      2\n8   a      4      0\n9   a      4      2\n"))),(0,r.kt)("h4",{id:"\u591a\u4e2a\u952e"},"\u591a\u4e2a\u952e"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> left = pd.DataFrame({'key1': ['foo', 'foo', 'bar'],\n                         'key2': ['one', 'two', 'one'],\n                         'lval': [1, 2, 3]})\n>>> right = pd.DataFrame({'key1': ['foo', 'foo', 'bar', 'bar'],\n                          'key2': ['one', 'one', 'one', 'two'],\n                          'rval': [4, 5, 6, 7]})\n>>> left\n  key1 key2  lval\n0  foo  one     1\n1  foo  two     2\n2  bar  one     3\n\n>>> right\n  key1 key2  rval\n0  foo  one     4\n1  foo  one     5\n2  bar  one     6\n3  bar  two     7\n\n>>> pd.merge(left, right, on=['key1', 'key2'], how='outer')\n  key1 key2  lval  rval\n0  foo  one   1.0   4.0\n1  foo  one   1.0   5.0\n2  foo  two   2.0   NaN\n3  bar  one   3.0   6.0\n4  bar  two   NaN   7.0\n")),(0,r.kt)("h4",{id:"\u91cd\u590d\u5217\u540d"},"\u91cd\u590d\u5217\u540d"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"merge")," \u6709\u4e00\u4e2a\u66f4\u5b9e\u7528\u7684 ",(0,r.kt)("strong",{parentName:"p"},"suffixes")," \u9009\u9879\uff0c\u7528\u4e8e\u6307\u5b9a\u9644\u52a0\u5230\u5de6\u53f3\u4e24\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"DataFrame")," \u5bf9\u8c61\u7684\u91cd\u53e0\u5217\u540d\u4e0a\u7684\u5b57\u7b26\u4e32\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> pd.merge(left, right, on='key1')\n  key1 key2_x  lval key2_y  rval\n0  foo    one     1    one     4\n1  foo    one     1    one     5\n2  foo    two     2    one     4\n3  foo    two     2    one     5\n4  bar    one     3    one     6\n5  bar    one     3    two     7\n\n>>> pd.merge(left, right, on='key1', suffixes=('_left', '_right'))\n  key1 key2_left  lval key2_right  rval\n0  foo       one     1        one     4\n1  foo       one     1        one     5\n2  foo       two     2        one     4\n3  foo       two     2        one     5\n4  bar       one     3        one     6\n5  bar       one     3        two     7\n")),(0,r.kt)("h3",{id:"\u57fa\u4e8e\u7d22\u5f15\u5408\u5e76"},"\u57fa\u4e8e\u7d22\u5f15\u5408\u5e76"),(0,r.kt)("p",null,"\u6709\u65f6\u5019\uff0c",(0,r.kt)("strong",{parentName:"p"},"DataFrame")," \u4e2d\u7684\u8fde\u63a5\u952e\u4f4d\u4e8e\u5176\u7d22\u5f15\u4e2d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u4f20\u5165",(0,r.kt)("strong",{parentName:"p"},"left_index=True")," \u6216 ",(0,r.kt)("strong",{parentName:"p"},"right_index=True"),"\uff08\u6216\u4e24\u4e2a\u90fd\u4f20\uff09\u4ee5\u8bf4\u660e\u7d22\u5f15\u5e94\u8be5\u88ab\u7528\u4f5c\u8fde\u63a5\u952e\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> left1 = pd.DataFrame({'key': ['a', 'b', 'a', 'a', 'b', 'c'],\n                          'value': range(6)})\n>>> right1 = pd.DataFrame({'group_val': [3.5, 7]}, index=['a', 'b'])\n\n>>> left1\n  key  value\n0   a      0\n1   b      1\n2   a      2\n3   a      3\n4   b      4\n5   c      5\n\n>>> right1\n   group_val\na        3.5\nb        7.0\n\n>>> pd.merge(left1, right1, left_on='key', right_index=True)\n  key  value  group_val\n0   a      0        3.5\n2   a      2        3.5\n3   a      3        3.5\n1   b      1        7.0\n4   b      4        7.0\n")),(0,r.kt)("admonition",{title:"outer",type:"tip"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> pd.merge(left1, right1, left_on='key', right_index=True, how='outer')\n  key  value  group_val\n0   a      0        3.5\n2   a      2        3.5\n3   a      3        3.5\n1   b      1        7.0\n4   b      4        7.0\n5   c      5        NaN\n"))),(0,r.kt)("p",null,"\u540c\u65f6\u4f7f\u7528\u5408\u5e76\u53cc\u65b9\u7684\u7d22\u5f15\u4e5f\u6ca1\u95ee\u9898\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> left2 = pd.DataFrame([[1., 2.], [3., 4.], [5., 6.]],\n                         index=['a', 'c', 'e'],\n                         columns=['Ohio', 'Nevada'])\n>>> right2 = pd.DataFrame([[7., 8.], [9., 10.], [11., 12.], [13, 14]],\n                          index=['b', 'c', 'd', 'e'],\n                          columns=['Missouri', 'Alabama'])\n>>> left2\n   Ohio  Nevada\na   1.0     2.0\nc   3.0     4.0\ne   5.0     6.0\n\n>>> right2\n   Missouri  Alabama\nb       7.0      8.0\nc       9.0     10.0\nd      11.0     12.0\ne      13.0     14.0\n\n>>> pd.merge(left2, right2, how='outer', left_index=True, right_index=True)\n   Ohio  Nevada  Missouri  Alabama\na   1.0     2.0       NaN      NaN\nb   NaN     NaN       7.0      8.0\nc   3.0     4.0       9.0     10.0\nd   NaN     NaN      11.0     12.0\ne   5.0     6.0      13.0     14.0\n")),(0,r.kt)("h3",{id:"\u57fa\u4e8e\u8f74\u5408\u5e76\u6570\u636e"},"\u57fa\u4e8e\u8f74\u5408\u5e76\u6570\u636e"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> s1 = pd.Series([0, 1], index=['a', 'b'])\n>>> s2 = pd.Series([2, 3, 4], index=['c', 'd', 'e'])\n>>> s3 = pd.Series([5, 6], index=['f', 'g'])\n\n>>> s1\na    0\nb    1\n\ndtype: int64\n>>> s2\nc    2\nd    3\ne    4\n\ndtype: int64\n>>> s3\nf    5\ng    6\ndtype: int64\n    \n>>> pd.concat([s1, s2, s3])\na    0\nb    1\nc    2\nd    3\ne    4\nf    5\ng    6\ndtype: int64\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c",(0,r.kt)("strong",{parentName:"p"},"concat")," \u662f\u5728 ",(0,r.kt)("strong",{parentName:"p"},"axis=0")," \u4e0a\u5de5\u4f5c\u7684\uff0c\u6700\u7ec8\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Series"),"\u3002\u5982\u679c\u4f20\u5165 ",(0,r.kt)("strong",{parentName:"p"},"axis=1"),"\uff0c\u5219\u7ed3\u679c\u5c31\u4f1a\u53d8\u6210\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"DataFrame"),"\uff08 ",(0,r.kt)("strong",{parentName:"p"},"axis=1")," \u662f\u5217\uff09\uff1a"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> pd.concat([s1, s2, s3], axis=1)\n     0    1    2\na  0.0  NaN  NaN\nb  1.0  NaN  NaN\nc  NaN  2.0  NaN\nd  NaN  3.0  NaN\ne  NaN  4.0  NaN\nf  NaN  NaN  5.0\ng  NaN  NaN  6.0\n"))),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"\u4f20\u5165 ",(0,r.kt)("strong",{parentName:"p"},"join='inner'")," \u5373\u53ef\u5f97\u5230\u5b83\u4eec\u7684\u4ea4\u96c6\uff1a"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> s4\na    0\nb    1\nf    5\ng    6\ndtype: int64\n    \n>>> pd.concat([s1, s4], axis=1)\n     0  1\na  0.0  0\nb  1.0  1\nf  NaN  5\ng  NaN  6\n\n>>> pd.concat([s1, s4], axis=1, join='inner')\n   0  1\na  0  0\nb  1  1\n"))),(0,r.kt)("p",null,"\u5047\u8bbe\u4f60\u60f3\u8981\u5728\u8fde\u63a5\u8f74\u4e0a\u521b\u5efa\u4e00\u4e2a\u5c42\u6b21\u5316\u7d22\u5f15\uff0c\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"keys")," \u53c2\u6570\u5373\u53ef\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> result = pd.concat([s1, s1, s3], keys=['one','two', 'three'])\n>>> result\none    a    0\n       b    1\ntwo    a    0\n       b    1\nthree  f    5\n       g    6\ndtype: int64\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"\u5982\u679c\u6cbf\u7740 ",(0,r.kt)("strong",{parentName:"p"},"axis=1")," \u5bf9 ",(0,r.kt)("strong",{parentName:"p"},"Series")," \u8fdb\u884c\u5408\u5e76\uff0c\u5219 ",(0,r.kt)("strong",{parentName:"p"},"keys")," \u5c31\u4f1a\u6210\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"DataFrame")," \u7684\u5217\u5934\uff1a"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> pd.concat([s1, s2, s3], axis=1, keys=['one','two', 'three'])\n   one  two  three\na  0.0  NaN    NaN\nb  1.0  NaN    NaN\nc  NaN  2.0    NaN\nd  NaN  3.0    NaN\ne  NaN  4.0    NaN\nf  NaN  NaN    5.0\ng  NaN  NaN    6.0\n"))),(0,r.kt)("p",null,"\u540c\u6837\u7684\u903b\u8f91\u4e5f\u9002\u7528\u4e8e ",(0,r.kt)("strong",{parentName:"p"},"DataFrame")," \u5bf9\u8c61\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> df1 = pd.DataFrame(np.arange(6).reshape(3, 2), \n                       index=['a', 'b', 'c'],columns=['one', 'two'])\n>>> df2 = pd.DataFrame(5 + np.arange(4).reshape(2, 2), \n                       index=['a','c'],columns=['three', 'four'])\n>>> df1\n   one  two\na    0    1\nb    2    3\nc    4    5\n\n>>> df2\n   three  four\na      5     6\nc      7     8\n\n>>> pd.concat([df1, df2], axis=1, keys=['level1', 'level2'])\n  level1     level2     \n     one two  three four\na      0   1    5.0  6.0\nb      2   3    NaN  NaN\nc      4   5    7.0  8.0\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"\u4e0a\u9762\u7684 ",(0,r.kt)("strong",{parentName:"p"},"DataFrame")," \u8fde\u63a5\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5b57\u5178\u7684\u65b9\u5f0f\uff1a"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> pd.concat({'level1': df1, 'level2': df2}, axis=1)\n  level1     level2     \n     one two  three four\na      0   1    5.0  6.0\nb      2   3    NaN  NaN\nc      4   5    7.0  8.0\n"))),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"DataFrame")," \u8fde\u63a5\u65f6\u5ffd\u7565\u7d22\u5f15\uff1a"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> df1 = pd.DataFrame(np.random.randn(3, 4), columns=['a', 'b', 'c', 'd'])\n>>> df2 = pd.DataFrame(np.random.randn(2, 3), columns=['b', 'd', 'a'])\n\n>>> df1\n          a         b         c         d\n0  0.799077 -1.133295 -1.042869 -0.018429\n1  1.424598 -1.170022  1.052247  0.035564\n2  1.925944 -0.202279 -1.461569 -0.422749\n\n>>> df2\n          b         d         a\n0  1.032928 -2.137308  1.197095\n1 -0.204432  2.012739  1.442443\n\n>>> pd.concat([df1, df2], ignore_index=True)\n          a         b         c         d\n0  0.799077 -1.133295 -1.042869 -0.018429\n1  1.424598 -1.170022  1.052247  0.035564\n2  1.925944 -0.202279 -1.461569 -0.422749\n3  1.197095  1.032928       NaN -2.137308\n4  1.442443 -0.204432       NaN  2.012739\n\n>>> pd.concat([df1, df2])\n          a         b         c         d\n0  0.799077 -1.133295 -1.042869 -0.018429\n1  1.424598 -1.170022  1.052247  0.035564\n2  1.925944 -0.202279 -1.461569 -0.422749\n0  1.197095  1.032928       NaN -2.137308\n1  1.442443 -0.204432       NaN  2.012739\n"))),(0,r.kt)("h3",{id:"\u5408\u5e76\u8986\u76d6\u6570\u636e"},"\u5408\u5e76\u8986\u76d6\u6570\u636e"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"combine_first")," \u7528\u4f20\u9012\u5bf9\u8c61\u4e2d\u7684\u6570\u636e\u4e3a\u8c03\u7528\u5bf9\u8c61\u7684\u7f3a\u5931\u6570\u636e \u201c",(0,r.kt)("strong",{parentName:"p"},"\u6253\u8865\u4e01"),"\u201d\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> df1 = pd.DataFrame({'a': [1., np.nan, 5., np.nan],'b': [np.nan, 2., np.nan, 6.],'c': range(2, 18, 4)})\n>>> df2 = pd.DataFrame({'a': [5., 4., np.nan, 3., 7.],'b': [np.nan, 3., 4., 6., 8.]})\n\n>>> df1\n     a    b   c\n0  1.0  NaN   2\n1  NaN  2.0   6\n2  5.0  NaN  10\n3  NaN  6.0  14\n\n>>> df2\n     a    b\n0  5.0  NaN\n1  4.0  3.0\n2  NaN  4.0\n3  3.0  6.0\n4  7.0  8.0\n\n>>> df1.combine_first(df2)\n     a    b     c\n0  1.0  NaN   2.0\n1  4.0  2.0   6.0\n2  5.0  4.0  10.0\n3  3.0  6.0  14.0\n4  7.0  8.0   NaN\n")),(0,r.kt)("h2",{id:"\u6570\u636e\u91cd\u5851"},"\u6570\u636e\u91cd\u5851"),(0,r.kt)("h3",{id:"\u91cd\u5851\u5c42\u6b21\u5316\u7d22\u5f15"},"\u91cd\u5851\u5c42\u6b21\u5316\u7d22\u5f15"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"stack \uff1a"),"\u5c06\u6570\u636e\u7684\u5217\u201c\u65cb\u8f6c\u201d\u4e3a\u884c"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"unstack \uff1a"),"\u5c06\u6570\u636e\u7684\u884c\u201c\u65cb\u8f6c\u201d\u4e3a\u5217")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> data = pd.DataFrame(np.arange(6).reshape((2, 3)),\n                        index=pd.Index(['Ohio','Colorado'],name='state'),\n                        columns=pd.Index(['one', 'two', 'three'],name='number'))\n>>> data\nnumber    one  two  three\nstate                    \nOhio        0    1      2\nColorado    3    4      5\n")),(0,r.kt)("admonition",{title:"stack",type:"note"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> result = data.stack()\n>>> result\nstate     number\nOhio      one       0\n          two       1\n          three     2\nColorado  one       3\n          two       4\n          three     5\ndtype: int64\n"))),(0,r.kt)("admonition",{title:"unstack",type:"note"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> result.unstack()\nnumber    one  two  three\nstate                    \nOhio        0    1      2\nColorado    3    4      5\n"))),(0,r.kt)("p",null,"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c",(0,r.kt)("strong",{parentName:"p"},"unstack")," \u64cd\u4f5c\u7684\u662f\u6700\u5185\u5c42\uff08 ",(0,r.kt)("strong",{parentName:"p"},"stack")," \u4e5f\u662f\u5982\u6b64\uff09\u3002\u4f20\u5165\u5206\u5c42\u7ea7\u522b\u7684\u7f16\u53f7\u6216\u540d\u79f0\u5373\u53ef\u5bf9\u5176\u5b83\u7ea7\u522b\u8fdb\u884c ",(0,r.kt)("strong",{parentName:"p"},"unstack")," \u64cd\u4f5c\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> result.unstack(0)\nstate   Ohio  Colorado\nnumber                \none        0         3\ntwo        1         4\nthree      2         5\n\n>>> result.unstack('state')\nstate   Ohio  Colorado\nnumber                \none        0         3\ntwo        1         4\nthree      2         5\n")),(0,r.kt)("p",null,"\u5982\u679c\u4e0d\u662f\u6240\u6709\u7684\u7ea7\u522b\u503c\u90fd\u80fd\u5728\u5404\u5206\u7ec4\u4e2d\u627e\u5230\u7684\u8bdd\uff0c\u5219 ",(0,r.kt)("strong",{parentName:"p"},"unstack")," \u64cd\u4f5c\u53ef\u80fd\u4f1a\u5f15\u5165\u7f3a\u5931\u6570\u636e\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> s1 = pd.Series([0, 1, 2, 3], index=['a', 'b', 'c', 'd'])\n>>> s2 = pd.Series([4, 5, 6], index=['c', 'd', 'e'])\n>>> data2 = pd.concat([s1, s2], keys=['one', 'two'])\n>>> data2\none  a    0\n     b    1\n     c    2\n     d    3\ntwo  c    4\n     d    5\n     e    6\ndtype: int64\n    \n>>> data2.unstack()\n       a    b    c    d    e\none  0.0  1.0  2.0  3.0  NaN\ntwo  NaN  NaN  4.0  5.0  6.0\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"stack")," \u9ed8\u8ba4\u4f1a\u6ee4\u9664\u7f3a\u5931\u6570\u636e\uff0c\u56e0\u6b64\u8be5\u8fd0\u7b97\u662f\u53ef\u9006\u7684\uff1a"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> data2.unstack()\n       a    b    c    d    e\none  0.0  1.0  2.0  3.0  NaN\ntwo  NaN  NaN  4.0  5.0  6.0\n\n>>> data2.unstack().stack()\none  a    0.0\n     b    1.0\n     c    2.0\n     d    3.0\ntwo  c    4.0\n     d    5.0\n     e    6.0\ndtype: float64\n    \n>>> data2.unstack().stack(dropna=False)\none  a    0.0\n     b    1.0\n     c    2.0\n     d    3.0\n     e    NaN\ntwo  a    NaN\n     b    NaN\n     c    4.0\n     d    5.0\n     e    6.0\ndtype: float64\n"))),(0,r.kt)("p",null,"\u5728\u5bf9 ",(0,r.kt)("strong",{parentName:"p"},"DataFrame")," \u8fdb\u884c ",(0,r.kt)("strong",{parentName:"p"},"unstack")," \u64cd\u4f5c\u65f6\uff0c\u4f5c\u4e3a\u65cb\u8f6c\u8f74\u7684\u7ea7\u522b\u5c06\u4f1a\u6210\u4e3a\u7ed3\u679c\u4e2d\u7684\u6700\u4f4e\u7ea7\u522b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> df = pd.DataFrame({'left': result, 'right': result + 5},\n                      columns=pd.Index(['left', 'right'],name='side'))\n>>> df\nside             left  right\nstate    number             \nOhio     one        0      5\n         two        1      6\n         three      2      7\nColorado one        3      8\n         two        4      9\n         three      5     10\n        \n>>> df.unstack('state')\nside   left          right         \nstate  Ohio Colorado  Ohio Colorado\nnumber                             \none       0        3     5        8\ntwo       1        4     6        9\nthree     2        5     7       10\n")),(0,r.kt)("p",null,"\u5f53\u8c03\u7528 ",(0,r.kt)("strong",{parentName:"p"},"stack")," \uff0c\u6211\u4eec\u53ef\u4ee5\u6307\u660e\u8f74\u7684\u540d\u5b57\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> df.unstack('state').stack('side')\nstate         Colorado  Ohio\nnumber side                 \none    left          3     0\n       right         8     5\ntwo    left          4     1\n       right         9     6\nthree  left          5     2\n       right        10     7\n")),(0,r.kt)("h3",{id:"\u6570\u636e\u6241\u5e73\u5316"},"\u6570\u636e\u6241\u5e73\u5316"),(0,r.kt)("p",null,"\u4e00\u4e2a\u5e38\u89c1\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> ldata[:10]\n  date        item     value\n0 1959-03-31  realgdp  2710.349\n1 1959-03-31  infl     0.000\n2 1959-03-31  unemp    5.800\n3 1959-06-30  realgdp  2778.801\n4 1959-06-30  infl     2.340\n5 1959-06-30  unemp    5.100\n6 1959-09-30  realgdp  2775.488\n7 1959-09-30  infl     2.740\n8 1959-09-30  unemp    5.300\n9 1959-12-31  realgdp  2785.204\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"date")," \u5217\u7684\u65e5\u671f\u503c\u5305\u542b\u91cd\u590d\u6570\u636e\uff0c\u6709\u65f6\u5019\uff0c\u6211\u4eec\u5e0c\u671b\u4ee5\u552f\u4e00\u7684\u65f6\u95f4\u5e8f\u5217\u6765\u67e5\u770b\u6570\u636e\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528  "),(0,r.kt)("p",null," ",(0,r.kt)("strong",{parentName:"p"},"pivot")," \u65b9\u6cd5\u8fdb\u884c\u8f6c\u6362\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> pivoted = ldata.pivot('date', 'item', 'value')\n>>> pivoted\nitem        infl   realgdp   unemp\ndate\n1959-03-31  0.00   2710.349  5.8\n1959-06-30  2.34   2778.801  5.1\n1959-09-30  2.74   2775.488  5.3\n1959-12-31  0.27   2785.204  5.6\n1960-03-31  2.31   2847.699  5.2\n1960-06-30  0.14   2834.390  5.2\n1960-09-30  2.70   2839.022  5.6\n1960-12-31  1.21   2802.616  6.3\n1961-03-31  -0.40  2819.264  6.8\n1961-06-30  1.47   2872.005  7.0\n... ... ... ...\n2007-06-30  2.75   13203.977 4.5\n2007-09-30  3.45   13321.109 4.7\n2007-12-31  6.38   13391.249 4.8\n2008-03-31  2.82   13366.865 4.9\n2008-06-30  8.53   13415.266 5.4\n2008-09-30  -3.16  13324.600 6.0\n2008-12-31  -8.79  13141.920 6.9\n2009-03-31  0.94   12925.410 8.1\n2009-06-30  3.37   12901.504 9.2\n2009-09-30  3.56   12990.341 9.6\n[203 rows x 3 columns]\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"\u524d\u4e24\u4e2a\u4f20\u9012\u7684\u53c2\u6570\u503c\u5206\u522b\u7528\u4f5c\u884c\u548c\u5217\u7d22\u5f15\uff08",(0,r.kt)("strong",{parentName:"p"},"data"),"\u3001",(0,r.kt)("strong",{parentName:"p"},"item"),"\uff09\uff0c\u6700\u540e\u4e00\u4e2a\u53ef\u9009\u503c\u5219\u662f\u7528\u4e8e\u586b\u5145",(0,r.kt)("strong",{parentName:"p"},"DataFrame")," \u7684\u6570\u636e\u5217\u3002")),(0,r.kt)("p",null,"\u5982\u679c\u586b\u5145 ",(0,r.kt)("strong",{parentName:"p"},"DataFrame")," \u7684\u6570\u636e\u5217\u6709\u4e24\u5217\u7684\u8bdd\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> ldata['value2'] = np.random.randn(len(ldata))\n\n>>> ldata[:10]\n        date     item     value    value2\n0 1959-03-31  realgdp  2710.349  0.523772\n1 1959-03-31     infl     0.000  0.000940\n2 1959-03-31    unemp     5.800  1.343810\n3 1959-06-30  realgdp  2778.801 -0.713544\n4 1959-06-30     infl     2.340 -0.831154\n5 1959-06-30    unemp     5.100 -2.370232\n6 1959-09-30  realgdp  2775.488 -1.860761\n7 1959-09-30     infl     2.740 -0.860757\n8 1959-09-30    unemp     5.300  0.560145\n9 1959-12-31  realgdp  2785.204 -1.265934\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"pivot")," \u65b9\u6cd5\u5ffd\u7565\u6700\u540e\u4e00\u4e2a\u53c2\u6570\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> pivoted = ldata.pivot('date', 'item')\n\n>>> pivoted[:5] \n           value                    value2                    \nitem        infl   realgdp unemp      infl   realgdp     unemp\ndate                                                          \n1959-03-31  0.00  2710.349   5.8  0.000940  0.523772  1.343810\n1959-06-30  2.34  2778.801   5.1 -0.831154 -0.713544 -2.370232\n1959-09-30  2.74  2775.488   5.3 -0.860757 -1.860761  0.560145\n1959-12-31  0.27  2785.204   5.6  0.119827 -1.265934 -1.063512\n1960-03-31  2.31  2847.699   5.2 -2.359419  0.332883 -0.199543\n\n>>> pivoted['value'][:5] \nitem        infl   realgdp  unemp\ndate                             \n1959-03-31  0.00  2710.349    5.8\n1959-06-30  2.34  2778.801    5.1\n1959-09-30  2.74  2775.488    5.3\n1959-12-31  0.27  2785.204    5.6\n1960-03-31  2.31  2847.699    5.2\n")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"pivot")," \u5176\u5b9e\u5c31\u662f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"set_index")," \u521b\u5efa\u5c42\u6b21\u5316\u7d22\u5f15\uff0c\u518d\u7528 ",(0,r.kt)("strong",{parentName:"p"},"unstack")," \u91cd\u5851\uff1a"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> unstacked = ldata.set_index(['date', 'item']).unstack('item')\n\n>>> unstacked[:7]\n           value                    value2                    \nitem        infl   realgdp unemp      infl   realgdp     unemp\ndate                                                          \n1959-03-31  0.00  2710.349   5.8  0.000940  0.523772  1.343810\n1959-06-30  2.34  2778.801   5.1 -0.831154 -0.713544 -2.370232\n1959-09-30  2.74  2775.488   5.3 -0.860757 -1.860761  0.560145\n1959-12-31  0.27  2785.204   5.6  0.119827 -1.265934 -1.063512\n1960-03-31  2.31  2847.699   5.2 -2.359419  0.332883 -0.199543\n1960-06-30  0.14  2834.390   5.2 -0.970736 -1.541996 -1.307030\n1960-09-30  2.70  2839.022   5.6  0.377984  0.286350 -0.753887\n"))),(0,r.kt)("h3",{id:"pivot-\u9006\u8fd0\u7b97"},"pivot \u9006\u8fd0\u7b97"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> df = pd.DataFrame({'key': ['foo', 'bar', 'baz'],\n                       'A': [1, 2, 3],'B': [4, 5, 6],'C': [7, 8, 9]})\n>>> df\n   key  A  B  C\n0  foo  1  4  7\n1  bar  2  5  8\n2  baz  3  6  9\n")),(0,r.kt)("p",null,"\u6307\u5b9a ",(0,r.kt)("strong",{parentName:"p"},"key")," \u4e3a\u5206\u7ec4\u6807\u7b7e\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> melted = pd.melt(df, ['key'])\n\n>>> melted\n   key variable  value\n0  foo        A      1\n1  bar        A      2\n2  baz        A      3\n3  foo        B      4\n4  bar        B      5\n5  baz        B      6\n6  foo        C      7\n7  bar        C      8\n8  baz        C      9\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"pivot")," \u91cd\u5851:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> reshaped = melted.pivot('key', 'variable', 'value')\n\n>>> reshaped\nvariable  A  B  C\nkey              \nbar       2  5  8\nbaz       3  6  9\nfoo       1  4  7\n"))),(0,r.kt)("p",null,"\u56e0\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"pivot")," \u7684\u7ed3\u679c\u4ece\u5217\u521b\u5efa\u4e86\u4e00\u4e2a\u7d22\u5f15\uff0c\u7528\u4f5c\u884c\u6807\u7b7e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"reset_index")," \u5c06\u6570\u636e\u79fb\u56de\u5217\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> reshaped.reset_index()\nvariable  key  A  B  C\n0         bar  2  5  8\n1         baz  3  6  9\n2         foo  1  4  7\n")),(0,r.kt)("p",null,"\u4f60\u8fd8\u53ef\u4ee5\u6307\u5b9a\u5217\u7684\u5b50\u96c6\uff0c\u4f5c\u4e3a\u503c\u7684\u5217\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> pd.melt(df, id_vars=['key'], value_vars=['A', 'B'])\n   key variable  value\n0  foo        A      1\n1  bar        A      2\n2  baz        A      3\n3  foo        B      4\n4  bar        B      5\n5  baz        B      6\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"pandas.melt")," \u4e5f\u53ef\u4ee5\u4e0d\u7528\u5206\u7ec4\u6807\u7b7e\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> pd.melt(df, value_vars=['A', 'B', 'C'])\n  variable  value\n0        A      1\n1        A      2\n2        A      3\n3        B      4\n4        B      5\n5        B      6\n6        C      7\n7        C      8\n8        C      9\n\n>>> pd.melt(df, value_vars=['key', 'A', 'B'])\n  variable value\n0      key   foo\n1      key   bar\n2      key   baz\n3        A     1\n4        A     2\n5        A     3\n6        B     4\n7        B     5\n8        B     6\n")))}k.isMDXComponent=!0}}]);