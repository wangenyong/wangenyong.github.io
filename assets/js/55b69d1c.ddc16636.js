"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6444],{3905:(e,n,a)=>{a.d(n,{Zo:()=>p,kt:()=>f});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=t.createContext({}),c=function(e){var n=t.useContext(i),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},p=function(e){var n=c(e.components);return t.createElement(i.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(a),u=r,f=d["".concat(i,".").concat(u)]||d[u]||m[u]||l;return a?t.createElement(f,o(o({ref:n},p),{},{components:a})):t.createElement(f,o({ref:n},p))}));function f(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=u;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[d]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<l;c++)o[c]=a[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"},3221:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var t=a(7462),r=(a(7294),a(3905));const l={sidebar_position:13,id:"Spark-SQL-Sort",title:"spark SQL \u6392\u5e8f"},o=void 0,s={unversionedId:"bigdata/Spark-SQL-Sort",id:"bigdata/Spark-SQL-Sort",title:"spark SQL \u6392\u5e8f",description:"\u6570\u636e\u51c6\u5907",source:"@site/docs/bigdata/spark-SQL-Sort.md",sourceDirName:"bigdata",slug:"/bigdata/Spark-SQL-Sort",permalink:"/docs/bigdata/Spark-SQL-Sort",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/bigdata/spark-SQL-Sort.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13,id:"Spark-SQL-Sort",title:"spark SQL \u6392\u5e8f"},sidebar:"tutorialSidebar",previous:{title:"spark SQL \u5206\u7ec4\u7edf\u8ba1",permalink:"/docs/bigdata/Spark-SQL-GroupBy"},next:{title:"spark SQL Join",permalink:"/docs/bigdata/Spark-SQL-Join"}},i={},c=[{value:"\u6570\u636e\u51c6\u5907",id:"\u6570\u636e\u51c6\u5907",level:2},{value:"sort",id:"sort",level:2},{value:"orderBy",id:"orderby",level:2},{value:"ASC",id:"asc",level:2},{value:"DESC",id:"desc",level:2}],p={toc:c},d="wrapper";function m(e){let{components:n,...a}=e;return(0,r.kt)(d,(0,t.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"\u6570\u636e\u51c6\u5907"},"\u6570\u636e\u51c6\u5907"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import spark.implicits._\n\nval simpleData = Seq(("James", "Sales", "NY", 90000, 34, 10000),\n    ("Michael", "Sales", "NY", 86000, 56, 20000),\n    ("Robert", "Sales", "CA", 81000, 30, 23000),\n    ("Maria", "Finance", "CA", 90000, 24, 23000),\n    ("Raman", "Finance", "CA", 99000, 40, 24000),\n    ("Scott", "Finance", "NY", 83000, 36, 19000),\n    ("Jen", "Finance", "NY", 79000, 53, 15000),\n    ("Jeff", "Marketing", "CA", 80000, 25, 18000),\n    ("Kumar", "Marketing", "NY", 91000, 50, 21000)\n)\nval df = simpleData.toDF("employee_name", "department", "state", "salary", "age", "bonus")\ndf.printSchema()\ndf.show()\n\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"root\n |-- employee_name: string (nullable = true)\n |-- department: string (nullable = true)\n |-- state: string (nullable = true)\n |-- salary: integer (nullable = false)\n |-- age: integer (nullable = false)\n |-- bonus: integer (nullable = false)\n\n+-------------+----------+-----+------+---+-----+\n|employee_name|department|state|salary|age|bonus|\n+-------------+----------+-----+------+---+-----+\n|        James|     Sales|   NY| 90000| 34|10000|\n|      Michael|     Sales|   NY| 86000| 56|20000|\n|       Robert|     Sales|   CA| 81000| 30|23000|\n|        Maria|   Finance|   CA| 90000| 24|23000|\n|        Raman|   Finance|   CA| 99000| 40|24000|\n|        Scott|   Finance|   NY| 83000| 36|19000|\n|          Jen|   Finance|   NY| 79000| 53|15000|\n|         Jeff| Marketing|   CA| 80000| 25|18000|\n|        Kumar| Marketing|   NY| 91000| 50|21000|\n+-------------+----------+-----+------+---+-----+\n")),(0,r.kt)("h2",{id:"sort"},"sort"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'df.sort("department", "state").show(false)\ndf.sort(col("department"), col("state")).show(false)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"+-------------+----------+-----+------+---+-----+\n|employee_name|department|state|salary|age|bonus|\n+-------------+----------+-----+------+---+-----+\n|Raman        |Finance   |CA   |99000 |40 |24000|\n|Maria        |Finance   |CA   |90000 |24 |23000|\n|Jen          |Finance   |NY   |79000 |53 |15000|\n|Scott        |Finance   |NY   |83000 |36 |19000|\n|Jeff         |Marketing |CA   |80000 |25 |18000|\n|Kumar        |Marketing |NY   |91000 |50 |21000|\n|Robert       |Sales     |CA   |81000 |30 |23000|\n|James        |Sales     |NY   |90000 |34 |10000|\n|Michael      |Sales     |NY   |86000 |56 |20000|\n+-------------+----------+-----+------+---+-----+\n")),(0,r.kt)("h2",{id:"orderby"},"orderBy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'df.orderBy("department", "state").show(false)\ndf.orderBy(col("department"), col("state")).show(false)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"+-------------+----------+-----+------+---+-----+\n|employee_name|department|state|salary|age|bonus|\n+-------------+----------+-----+------+---+-----+\n|Raman        |Finance   |CA   |99000 |40 |24000|\n|Maria        |Finance   |CA   |90000 |24 |23000|\n|Jen          |Finance   |NY   |79000 |53 |15000|\n|Scott        |Finance   |NY   |83000 |36 |19000|\n|Jeff         |Marketing |CA   |80000 |25 |18000|\n|Kumar        |Marketing |NY   |91000 |50 |21000|\n|Robert       |Sales     |CA   |81000 |30 |23000|\n|Michael      |Sales     |NY   |86000 |56 |20000|\n|James        |Sales     |NY   |90000 |34 |10000|\n+-------------+----------+-----+------+---+-----+\n")),(0,r.kt)("h2",{id:"asc"},"ASC"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'df.sort(col("department").asc, col("state").asc).show(false)\ndf.orderBy(col("department").asc, col("state").asc).show(false)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"+-------------+----------+-----+------+---+-----+\n|employee_name|department|state|salary|age|bonus|\n+-------------+----------+-----+------+---+-----+\n|Maria        |Finance   |CA   |90000 |24 |23000|\n|Raman        |Finance   |CA   |99000 |40 |24000|\n|Scott        |Finance   |NY   |83000 |36 |19000|\n|Jen          |Finance   |NY   |79000 |53 |15000|\n|Jeff         |Marketing |CA   |80000 |25 |18000|\n|Kumar        |Marketing |NY   |91000 |50 |21000|\n|Robert       |Sales     |CA   |81000 |30 |23000|\n|James        |Sales     |NY   |90000 |34 |10000|\n|Michael      |Sales     |NY   |86000 |56 |20000|\n+-------------+----------+-----+------+---+-----+\n")),(0,r.kt)("h2",{id:"desc"},"DESC"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'df.sort(col("department").asc, col("state").desc).show(false)\ndf.orderBy(col("department").asc, col("state").desc).show(false)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"+-------------+----------+-----+------+---+-----+\n|employee_name|department|state|salary|age|bonus|\n+-------------+----------+-----+------+---+-----+\n|Jen          |Finance   |NY   |79000 |53 |15000|\n|Scott        |Finance   |NY   |83000 |36 |19000|\n|Raman        |Finance   |CA   |99000 |40 |24000|\n|Maria        |Finance   |CA   |90000 |24 |23000|\n|Kumar        |Marketing |NY   |91000 |50 |21000|\n|Jeff         |Marketing |CA   |80000 |25 |18000|\n|Michael      |Sales     |NY   |86000 |56 |20000|\n|James        |Sales     |NY   |90000 |34 |10000|\n|Robert       |Sales     |CA   |81000 |30 |23000|\n+-------------+----------+-----+------+---+-----+\n")))}m.isMDXComponent=!0}}]);